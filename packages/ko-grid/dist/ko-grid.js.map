{"version":3,"file":"ko-grid.js","sources":["../src/constants.ts","../src/moveSelectionHandler.ts","../src/utils.ts","../src/templates/templates.ts","../src/classes/Dimension.ts","../src/resourceStringsProvider.ts","../src/configuration.ts","../src/domUtilityService.ts","../src/classes/EventProvider.ts","../src/sortService.ts","../src/styleProvider.ts","../src/classes/DefaultAggregationProvider.ts","../src/classes/AggregationService.ts","../src/classes/Column.ts","../src/classes/grid-config.ts","../src/classes/MessageBus.ts","../src/classes/Range.ts","../src/classes/Group.ts","../src/classes/Row.ts","../src/classes/RowFactory.ts","../src/classes/SearchProvider.ts","../src/classes/SelectionService.ts","../src/classes/Grid.ts","../src/binding-handlers/kgGridForEach.ts","../src/binding-handlers/koGrid.ts","../src/binding-handlers/kgRow.ts","../src/binding-handlers/kgFixedRow.ts","../src/binding-handlers/kgFixedHeaderRow.ts","../src/binding-handlers/kgCell.ts","../src/binding-handlers/kgCellClass.ts","../src/binding-handlers/kgHeaderRow.ts","../src/binding-handlers/kgHeaderCell.ts","../src/binding-handlers/mouseEvents.ts","../src/index.ts"],"sourcesContent":["﻿// the # of rows we want to add to the top and bottom of the rendered grid rows\r\nexport const EXCESS_ROWS = 8;\r\nexport const SCROLL_THRESHOLD = 6;\r\n\r\nexport enum AggregateOperation {\r\n    Total = 'SUM',\r\n    Average = 'AVG',\r\n}\r\n\r\nexport enum GridEventType {\r\n    ColumnWidthsChanged = 'columnWidthsChanged',\r\n    GroupInfosChanged = 'groupInfosChanged',\r\n    GroupToggleStarted = 'groupToggleStarted',\r\n    RowBound = 'rowBound',\r\n    SettingsChangedByUser = 'settingsChangedByUser',\r\n    SortInfosChanged = 'sortInfosChanged',\r\n}\r\n\r\nexport enum ResizeTarget {\r\n    Root = 'root',\r\n    Window = 'window',\r\n}\r\n\r\nexport enum RowReorderingMode {\r\n    Native = 'native',\r\n    jQueryUI = 'jquery-ui',\r\n}\r\n\r\nexport enum SortDirection {\r\n    Unspecified = '',\r\n    Ascending = 'asc',\r\n    Descending = 'desc',\r\n}\r\n","import { EXCESS_ROWS } from './constants';\r\nimport Grid from './classes/Grid';\r\n\r\n//set event binding on the grid so we can select using the up/down keys\r\nexport default function moveSelectionHandler(grid: Grid, evt: JQuery.Event): boolean {\r\n    const charCode = evt.which;\r\n    // detect which direction for arrow keys to navigate the grid\r\n    const offset = charCode === 38 ? -1 : charCode === 40 ? 1 : 0;\r\n    const lastClickedRow = grid.selectionService.lastClickedRow;\r\n    if (!offset || !lastClickedRow) {\r\n        return true;\r\n    }\r\n    const items = grid.renderedRows();\r\n    const index = items.indexOf(lastClickedRow) + offset;\r\n    if (index < 0 || index >= items.length) {\r\n        return true;\r\n    }\r\n    grid.selectionService.changeSelection(items[index], evt);\r\n    if (index > items.length - EXCESS_ROWS) {\r\n        grid.$viewport.scrollTop((grid.$viewport.scrollTop() || 0) + grid.rowHeight * EXCESS_ROWS);\r\n    } else if (index < EXCESS_ROWS) {\r\n        grid.$viewport.scrollTop((grid.$viewport.scrollTop() || 0) - grid.rowHeight * EXCESS_ROWS);\r\n    }\r\n    return false;\r\n}\r\n","﻿import ko from 'knockout';\r\nimport { Entity, Maybe, PropertyBag, Value } from './types';\r\n\r\nlet canvas: HTMLCanvasElement | undefined;\r\n\r\nexport default {\r\n    visualLength(node: JQuery): number {\r\n        const text = node.text().trim();\r\n        if (!text) {\r\n            return 0;\r\n        }\r\n\r\n        canvas = canvas || document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        if (!context) {\r\n            return 0;\r\n        }\r\n\r\n        context.font = node.css('font');\r\n        const metrics = context.measureText(text);\r\n        return metrics.width;\r\n    },\r\n    evalProperty(entity: Entity, path: string): Maybe<Value> {\r\n        const propPath = path.split('.');\r\n        let i = 0;\r\n        let tempProp = ko.unwrap(entity[propPath[i]]);\r\n        const links = propPath.length;\r\n        i++;\r\n        while (tempProp && i < links) {\r\n            tempProp = ko.unwrap((tempProp as PropertyBag)[propPath[i]]);\r\n            i++;\r\n        }\r\n        return tempProp;\r\n    },\r\n    hasValue(value: Maybe<Value>): value is Value {\r\n        return value != null && value !== '';\r\n    },\r\n    isPointerOverElement(event: JQuery.TriggeredEvent, node: Element): boolean {\r\n        const x = (event.originalEvent as MouseEvent).pageX;\r\n        const y = (event.originalEvent as MouseEvent).pageY;\r\n        const bounds = node.getBoundingClientRect();\r\n        return x >= bounds.left && x < bounds.right && y >= bounds.top && y < bounds.bottom;\r\n    },\r\n    newId: (function (): () => number {\r\n        let seedId = new Date().getTime();\r\n        return function newId(): number {\r\n            return ++seedId;\r\n        };\r\n    })(),\r\n};\r\n","import defaultGridTemplate from './gridTemplate.html';\r\nimport defaultRowTemplate from './rowTemplate.html';\r\nimport defaultFixedRowTemplate from './fixedRowTemplate.html';\r\nimport defaultFixedHeaderRowTemplate from './fixedHeaderRowTemplate.html';\r\nimport defaultGroupTemplate from './groupTemplate.html';\r\nimport defaultFixedGroupTemplate from './fixedGroupTemplate.html';\r\nimport defaultHeaderRowTemplate from './headerRowTemplate.html';\r\nimport defaultHeaderCellTemplate from './headerCellTemplate.html';\r\n\r\nexport default {\r\n    defaultGridTemplate(): string {\r\n        return defaultGridTemplate;\r\n    },\r\n    defaultRowTemplate(): string {\r\n        return defaultRowTemplate;\r\n    },\r\n    defaultFixedRowTemplate(): string {\r\n        return defaultFixedRowTemplate;\r\n    },\r\n    defaultGroupRowTemplate(): string {\r\n        return defaultGroupTemplate;\r\n    },\r\n    defaultFixedGroupTemplate(): string {\r\n        return defaultFixedGroupTemplate;\r\n    },\r\n    defaultHeaderRowTemplate(): string {\r\n        return defaultHeaderRowTemplate;\r\n    },\r\n    defaultHeaderCellTemplate(): string {\r\n        return defaultHeaderCellTemplate;\r\n    },\r\n    defaultFixedHeaderRowTemplate(): string {\r\n        return defaultFixedHeaderRowTemplate;\r\n    },\r\n};\r\n","﻿import ko, { Observable } from 'knockout';\r\n\r\nexport default class Dimension {\r\n    public constructor(width: number, height: number) {\r\n        this.outerWidth = ko.observable(width);\r\n        this.outerHeight = ko.observable(height);\r\n    }\r\n\r\n    public readonly outerHeight: Observable<number>;\r\n    public readonly outerWidth: Observable<number>;\r\n}\r\n","export interface ResourceStringsProvider {\r\n    columnMenuFilter: () => string;\r\n    columnMenuGroupBy: () => string;\r\n    columnMenuText: () => string;\r\n    footerFirstPage: () => string;\r\n    footerLastPage: () => string;\r\n    footerNextPage: () => string;\r\n    footerPageSize: () => string;\r\n    footerPreviousPage: () => string;\r\n    footerSelectedItems: () => string;\r\n    footerShownItems: () => string;\r\n    footerTotalItems: () => string;\r\n    groupHeaderNoGroups: () => string;\r\n    groupHeaderWithGroups: () => string;\r\n}\r\n\r\nexport default {\r\n    columnMenuFilter: (): string => 'Search Field:Value',\r\n    columnMenuGroupBy: (): string => 'Group By',\r\n    columnMenuText: (): string => 'Choose Columns:',\r\n    footerFirstPage: (): string => 'First Page',\r\n    footerLastPage: (): string => 'Last Page',\r\n    footerNextPage: (): string => 'Next Page',\r\n    footerPageSize: (): string => 'Page Size:',\r\n    footerPreviousPage: (): string => 'Previous Page',\r\n    footerSelectedItems: (): string => 'Selected Items:',\r\n    footerShownItems: (): string => 'Showing:',\r\n    footerTotalItems: (): string => 'Total Items:',\r\n    groupHeaderNoGroups: (): string => 'Drag column here to group rows',\r\n    groupHeaderWithGroups: (): string => 'Grouping By:',\r\n};\r\n","import resourceStringsProvider, { ResourceStringsProvider } from './resourceStringsProvider';\r\nimport { Entity, Maybe, Value } from './types';\r\nimport utils from './utils';\r\n\r\nconst configuration = {\r\n    css: {\r\n        groupCollapsedClass: '',\r\n        groupExpandedClass: '',\r\n        groupArrowClass: '',\r\n        removeGroupClass: '',\r\n    },\r\n    evalProperty: utils.evalProperty,\r\n    legacyMode: undefined as boolean | undefined,\r\n    resourceStringsProvider,\r\n};\r\n\r\nexport interface GlobalOptions {\r\n    readonly evalProperty?: (entity: Entity, path: string) => Maybe<Value>;\r\n    readonly groupCollapsedClass?: string;\r\n    readonly groupExpandedClass?: string;\r\n    readonly groupArrowClass?: string;\r\n    readonly removeGroupClass?: string;\r\n    readonly legacyMode?: boolean;\r\n    readonly resourceStringsProvider?: Partial<ResourceStringsProvider>;\r\n}\r\n\r\nexport function configure(options: GlobalOptions): void {\r\n    if (options.evalProperty) {\r\n        configuration.evalProperty = options.evalProperty;\r\n    }\r\n\r\n    if (options.groupCollapsedClass != null) {\r\n        configuration.css.groupCollapsedClass = options.groupCollapsedClass;\r\n    }\r\n\r\n    if (options.groupExpandedClass != null) {\r\n        configuration.css.groupExpandedClass = options.groupExpandedClass;\r\n    }\r\n\r\n    if (options.groupArrowClass != null) {\r\n        configuration.css.groupArrowClass = options.groupArrowClass;\r\n    }\r\n\r\n    if (options.removeGroupClass != null) {\r\n        configuration.css.removeGroupClass = options.removeGroupClass;\r\n    }\r\n\r\n    if (options.legacyMode != null) {\r\n        configuration.legacyMode = options.legacyMode;\r\n    }\r\n\r\n    if (options.resourceStringsProvider) {\r\n        configuration.resourceStringsProvider = Object.assign(\r\n            {},\r\n            resourceStringsProvider,\r\n            options.resourceStringsProvider\r\n        );\r\n    }\r\n}\r\n\r\nexport default configuration;\r\n","﻿import $ from 'jquery';\r\nimport Column from './classes/Column';\r\nimport Grid from './classes/Grid';\r\n\r\nexport interface GridContainers {\r\n    $canvas: JQuery;\r\n    $fixedCanvas: JQuery;\r\n    $fixedHeaderContainer: JQuery;\r\n    $fixedHeaderScroller: JQuery;\r\n    $fixedViewport: JQuery;\r\n    $groupPanel: JQuery;\r\n    $headerContainer: JQuery;\r\n    $headerScroller: JQuery;\r\n    $root: JQuery;\r\n    $topPanel: JQuery;\r\n    $viewport: JQuery;\r\n}\r\n\r\nconst domUtilityService = {\r\n    getGridContainers(rootEl: JQuery): GridContainers {\r\n        const $topPanel = rootEl.find('.kgTopPanel');\r\n        const $headerContainer = $topPanel.find('.kgNonFixedHeaderContainer');\r\n        const $fixedHeaderContainer = $topPanel.find('.kgFixedHeaderContainer');\r\n        const $viewport = rootEl.find('.kgNonFixedViewport');\r\n        const $fixedViewport = rootEl.find('.kgFixedViewport');\r\n\r\n        return {\r\n            $root: rootEl,\r\n            $topPanel,\r\n            $groupPanel: $topPanel.find('.kgGroupPanel'),\r\n            $headerContainer,\r\n            $headerScroller: $headerContainer.find('.kgHeaderScroller'),\r\n            $viewport,\r\n            $canvas: $viewport.find('.kgCanvas'),\r\n            $fixedHeaderContainer,\r\n            $fixedHeaderScroller: $fixedHeaderContainer.find('.kgHeaderScroller'),\r\n            $fixedViewport,\r\n            $fixedCanvas: $fixedViewport.find('.kgCanvas'),\r\n        };\r\n    },\r\n    updateGridLayout(grid: Grid): void {\r\n        //catch this so we can return the viewer to their original scroll after the resize!\r\n        const scrollTop = grid.$viewport.scrollTop() || 0;\r\n        //check to see if anything has changed\r\n        grid.refreshDomSizes({ width: grid.$root.width() || 0, height: grid.$root.height() || 0 });\r\n        grid.adjustScrollTop(scrollTop, true); //ensure that the user stays scrolled where they were\r\n    },\r\n    buildStyles(grid: Grid): void {\r\n        const rowHeight = grid.rowHeight;\r\n        const gridId = grid.gridId;\r\n\r\n        let style = grid.styleSheet;\r\n\r\n        if (!style) {\r\n            style = document.createElement('style');\r\n            style.id = gridId;\r\n            style.type = 'text/css';\r\n            document.body.appendChild(style);\r\n            grid.styleSheet = style;\r\n        }\r\n\r\n        const totalNonFixedRowWidth = grid.totalNonFixedRowWidth();\r\n        const kgHeaderScrollerWidth = totalNonFixedRowWidth + domUtilityService.scrollH;\r\n        let css = [\r\n            `.${gridId} .kgNonFixedCanvas { width: ${totalNonFixedRowWidth}px; }`,\r\n            `.${gridId} .kgNonFixedRow { width: ${totalNonFixedRowWidth}px; height: ${rowHeight}px; }`,\r\n            `.${gridId} .kgHeaderCell { height: ${grid.config.headerRowHeight - 1}px; }`,\r\n            `.${gridId} .kgCell { height: ${rowHeight - 1}px; }`,\r\n            `.${gridId} .kgNonFixedHeaderScroller { width: ${kgHeaderScrollerWidth}px; }`,\r\n        ].concat(getColumnStyles(grid, grid.visibleNonFixedColumns()));\r\n\r\n        if (grid.legacyMode) {\r\n            css = css.concat(\r\n                [\r\n                    `.${gridId} .kgFixedRow { width: ${grid.totalFixedRowWidth()}px; height: ${rowHeight}px; }`,\r\n                ],\r\n                getColumnStyles(grid, grid.visibleFixedColumns())\r\n            );\r\n        }\r\n\r\n        style.textContent = css.join('');\r\n    },\r\n    scrollH: 17, // default in IE, Chrome, & most browsers\r\n    scrollW: 17, // default in IE, Chrome, & most browsers\r\n};\r\n\r\nfunction getColumnStyles(grid: Grid, columns: Readonly<Column[]>): string[] {\r\n    const gridId = grid.gridId,\r\n        css: string[] = [];\r\n    let sumWidth = 0;\r\n\r\n    columns.forEach((col, i): void => {\r\n        css.push(\r\n            `.${gridId} .${col.fixedClass}.col${i} { width: ${col.width}px; left: ${sumWidth}px; }`\r\n        );\r\n        sumWidth += col.width;\r\n    });\r\n\r\n    return css;\r\n}\r\n\r\n(function measureScrollbars(): void {\r\n    const $testContainer = $('<div>')\r\n        .height(100)\r\n        .width(100)\r\n        .css('position', 'absolute')\r\n        .css('overflow', 'scroll')\r\n        .append('<div style=\"height: 400px; width: 400px;\">');\r\n    $testContainer.appendTo(document.body);\r\n    domUtilityService.scrollH = $testContainer.height() || 0 - $testContainer[0].clientHeight;\r\n    domUtilityService.scrollW = $testContainer.width() || 0 - $testContainer[0].clientWidth;\r\n    $testContainer.remove();\r\n})();\r\n\r\nexport default domUtilityService;\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport configuration from '../configuration';\r\nimport { GridEventType, ResizeTarget, RowReorderingMode } from '../constants';\r\nimport domUtilityService from '../domUtilityService';\r\nimport moveSelectionHandler from '../moveSelectionHandler';\r\nimport { GridRow, PropertyBag } from '../types';\r\nimport utils from '../utils';\r\nimport Column from './Column';\r\nimport Grid from './Grid';\r\nimport { GridOptions } from './grid-config';\r\nimport Row from './Row';\r\n\r\ninterface Group {\r\n    col: Column;\r\n    index: number;\r\n}\r\n\r\nconst groupPanelDragOverClass = 'kgGroupPanel--drag-over';\r\n\r\nexport default class EventProvider {\r\n    private constructor(grid: Grid) {\r\n        this.grid = grid;\r\n        this.colToMove = undefined;\r\n        this.groupToMove = undefined;\r\n        this.rowToMove = undefined;\r\n        this.groupPlaceholder = undefined;\r\n    }\r\n\r\n    private readonly grid: Grid;\r\n\r\n    private colToMove?: Column;\r\n    private groupPlaceholder?: JQuery;\r\n    private groupToMove?: Group;\r\n    private rowToMove?: Row;\r\n\r\n    public static init(grid: Grid, options: GridOptions): EventProvider {\r\n        const provider = new EventProvider(grid);\r\n        provider.assignGridEventHandlers(options);\r\n        provider.assignEvents();\r\n\r\n        return provider;\r\n    }\r\n\r\n    private assignGridEventHandlers(options: GridOptions): void {\r\n        const grid = this.grid;\r\n        grid.$viewport\r\n            .on('scroll', function (e): void {\r\n                const scrollLeft = e.target.scrollLeft;\r\n                const scrollTop = e.target.scrollTop;\r\n                grid.adjustScrollLeft(scrollLeft);\r\n                grid.adjustScrollTop(scrollTop);\r\n                grid.adjustFixedViewportScrollTop();\r\n            })\r\n            .on('keydown', function (e): boolean {\r\n                return moveSelectionHandler(grid, e);\r\n            });\r\n\r\n        //Chrome and firefox both need a tab index so the grid can receive focus.\r\n        //need to give the grid a tabindex if it doesn't already have one so\r\n        //we'll just give it a tab index of the corresponding gridcache index\r\n        //that way we'll get the same result every time it is run.\r\n        //configurable within the options.\r\n        let tabIndex = grid.config.tabIndex;\r\n        if (tabIndex === -1) {\r\n            tabIndex = document.querySelectorAll('.koGrid').length - 1;\r\n        }\r\n        grid.$viewport.attr('tabIndex', tabIndex);\r\n        assignResizeEventHandler(grid, options);\r\n    }\r\n\r\n    private assignEvents(): void {\r\n        const grid = this.grid;\r\n        grid.$groupPanel\r\n            .on('dragstart', '.kgGroupItem', this.onGroupDragStart.bind(this))\r\n            .on('dragenter', this.onGroupDragEnter.bind(this))\r\n            .on('dragover', this.onGroupDragOver.bind(this))\r\n            .on('dragleave', this.onGroupDragLeave.bind(this))\r\n            .on('drop', this.onGroupDrop.bind(this));\r\n\r\n        grid.$topPanel\r\n            .on('dragstart', '.kgHeaderSortColumn', this.onHeaderDragStart.bind(this))\r\n            .on('dragenter dragover', '.kgHeaderCell', this.onHeaderDragOver.bind(this))\r\n            .on('drop', '.kgHeaderSortColumn', this.onHeaderDrop.bind(this))\r\n            .on('dragend', this.onTopPanelDragEnd.bind(this));\r\n\r\n        this.enableRowReordering();\r\n\r\n        if (grid.legacyMode) {\r\n            const onRowHoverInBound = onRowHoverIn.bind(null, grid);\r\n            const onRowHoverOutBound = onRowHoverOut.bind(null, grid);\r\n            grid.$viewport\r\n                .on('mouseenter', '.kgRow', onRowHoverInBound)\r\n                .on('mouseleave', '.kgRow', onRowHoverOutBound);\r\n            grid.$fixedViewport\r\n                .on('mouseenter', '.kgRow', onRowHoverInBound)\r\n                .on('mouseleave', '.kgRow', onRowHoverOutBound);\r\n        }\r\n    }\r\n\r\n    private enableRowReordering(): void {\r\n        const grid = this.grid;\r\n        if (grid.config.rowReorderingMode === RowReorderingMode.jQueryUI) {\r\n            const renderedRows = this.grid.$viewport.find('.kgRow');\r\n            if (renderedRows.length) {\r\n                this.grid.renderedRows().forEach((row, index): void => {\r\n                    this.activateJqueryUIRowDragging(row, renderedRows.get(index), grid);\r\n                });\r\n            }\r\n\r\n            grid.on(GridEventType.RowBound, ({ data }): void => {\r\n                this.activateJqueryUIRowDragging(data.row, data.rowElement, grid);\r\n            });\r\n        } else if (grid.config.rowReorderingMode === RowReorderingMode.Native) {\r\n            grid.$viewport\r\n                .on('mousedown', '.kgRow', this.onRowMouseDown.bind(this))\r\n                .on('dragover', this.onRowDragOverNative.bind(this))\r\n                .on('drop', '.kgRow', this.onRowDropNative.bind(this));\r\n        }\r\n    }\r\n\r\n    private onGroupDragStart(event: JQuery.TriggeredEvent): void {\r\n        const groupItem = $(event.currentTarget);\r\n        const groupItemScope = ko.dataFor<Column | undefined>(groupItem[0]);\r\n        this.groupToMove = groupItemScope && {\r\n            col: groupItemScope,\r\n            index: groupItemScope.groupIndex(),\r\n        };\r\n\r\n        if (groupItemScope) {\r\n            allowDragging(event);\r\n            this.groupPlaceholder = createGroupPlaceholder(\r\n                this.grid,\r\n                groupItem.find('span:first').text()\r\n            );\r\n            // Needed so that the browser has enough time to register the element to be dragged\r\n            // since when it is hidden the drag never starts. Once started, we can hide it.\r\n            setTimeout(function (): void {\r\n                groupItem.hide();\r\n            });\r\n        }\r\n    }\r\n\r\n    private onGroupDragEnter(event: JQuery.TriggeredEvent): void {\r\n        if (this.groupPlaceholder) {\r\n            event.preventDefault();\r\n            this.grid.$groupPanel.addClass(groupPanelDragOverClass);\r\n        }\r\n    }\r\n\r\n    private onGroupDragOver(event: JQuery.TriggeredEvent): void {\r\n        const placeholder = this.groupPlaceholder;\r\n        if (placeholder) {\r\n            event.preventDefault();\r\n            moveGroupPlaceholderToPointer(placeholder, event);\r\n            placeholder.show();\r\n            this.grid.isDraggingOverGroups(true);\r\n        }\r\n    }\r\n\r\n    private onGroupDragLeave(event: JQuery.TriggeredEvent): void {\r\n        if (this.groupPlaceholder && !utils.isPointerOverElement(event, this.grid.$groupPanel[0])) {\r\n            this.groupPlaceholder.hide();\r\n            this.grid.$groupPanel.removeClass(groupPanelDragOverClass);\r\n            this.grid.isDraggingOverGroups(false);\r\n        }\r\n    }\r\n\r\n    private onGroupDrop(event: JQuery.Event): void {\r\n        event.preventDefault();\r\n        const placeholder = this.groupPlaceholder;\r\n        if (!placeholder) {\r\n            return;\r\n        }\r\n\r\n        const grid = this.grid;\r\n        const configGroups = grid.configGroups();\r\n        const dropTarget = placeholder.next('.kgGroupItem');\r\n        const groupScope =\r\n            dropTarget.length === 0 ? undefined : ko.dataFor<Column | undefined>(dropTarget[0]);\r\n        let targetIndex = groupScope ? groupScope.groupIndex() : configGroups.length;\r\n\r\n        if (this.groupToMove) {\r\n            if (!groupScope || this.groupToMove.index !== targetIndex) {\r\n                if (targetIndex > this.groupToMove.index) {\r\n                    targetIndex--;\r\n                }\r\n                configGroups.splice(this.groupToMove.index, 1);\r\n                configGroups.splice(targetIndex, 0, this.groupToMove.col);\r\n                grid.configGroups.valueHasMutated();\r\n                grid.fixGroupIndexes();\r\n            }\r\n        } else if (this.colToMove && !configGroups.includes(this.colToMove)) {\r\n            grid.groupBy(this.colToMove, targetIndex);\r\n        }\r\n    }\r\n\r\n    private onHeaderDragStart(event: JQuery.TriggeredEvent): void {\r\n        const sortColumn = event.currentTarget;\r\n        this.colToMove = ko.dataFor<Column | undefined>(sortColumn);\r\n        if (this.colToMove) {\r\n            allowDragging(event);\r\n            if (!this.grid.configGroups().includes(this.colToMove)) {\r\n                this.groupPlaceholder = createGroupPlaceholder(\r\n                    this.grid,\r\n                    sortColumn.textContent as string\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private onHeaderDragOver(event: JQuery.TriggeredEvent): void {\r\n        if (this.colToMove) {\r\n            const targetClass = this.colToMove.fixed ? 'kgFixedColumn' : 'kgNonFixedColumn';\r\n            if (event.currentTarget.classList.contains(targetClass)) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onHeaderDrop(event: JQuery.TriggeredEvent): void {\r\n        event.preventDefault();\r\n        if (!this.colToMove) {\r\n            return;\r\n        }\r\n        const headerScope = ko.dataFor<Column | undefined>(event.currentTarget);\r\n        if (headerScope && this.colToMove !== headerScope) {\r\n            const grid = this.grid;\r\n            const cols = grid.columns.peek();\r\n            cols.splice(this.colToMove.index, 1);\r\n            cols.splice(headerScope.index, 0, this.colToMove);\r\n            grid.fixColumnIndexes();\r\n            grid.columns.valueHasMutated();\r\n            domUtilityService.buildStyles(grid);\r\n            grid.trigger(GridEventType.SettingsChangedByUser, {\r\n                columnDefs: grid.settings().columnDefs,\r\n            });\r\n        }\r\n    }\r\n\r\n    private onTopPanelDragEnd(): void {\r\n        this.grid.$groupPanel.removeClass(groupPanelDragOverClass).find('.kgGroupItem').show();\r\n        this.colToMove = undefined;\r\n        this.groupToMove = undefined;\r\n        if (this.groupPlaceholder) {\r\n            this.groupPlaceholder.remove();\r\n            this.groupPlaceholder = undefined;\r\n            this.grid.isDraggingOverGroups(false);\r\n        }\r\n    }\r\n\r\n    // Row functions\r\n    private activateJqueryUIRowDragging(row: GridRow, rowElement: HTMLElement, grid: Grid): void {\r\n        if (!row.isGroupRow) {\r\n            const $row = $(rowElement);\r\n            $row.draggable({\r\n                scope: grid.gridId,\r\n                helper: 'clone',\r\n                handle: grid.config.rowReorderingHandle || undefined,\r\n                appendTo: $row.parent(),\r\n                stack: '.kgRow',\r\n                containment: grid.$viewport,\r\n                start: this.onRowMouseDown.bind(this),\r\n                revert: true,\r\n                revertDuration: 100,\r\n                zIndex: 1000,\r\n            }).droppable({\r\n                scope: grid.gridId,\r\n                over: this.onRowDragOverJQueryUI.bind(this),\r\n                out: this.onRowDragOutJQueryUI,\r\n                drop: this.onRowDropJQueryUI.bind(this),\r\n            });\r\n        }\r\n    }\r\n\r\n    private onRowMouseDown(event: Event): void {\r\n        const targetRow = event.currentTarget as Element;\r\n\r\n        // Get the scope from the row element\r\n        // Save the row for later.\r\n        this.rowToMove = ko.dataFor<Row | undefined>(targetRow);\r\n        if (this.rowToMove) {\r\n            // set draggable events\r\n            targetRow.setAttribute('draggable', 'true');\r\n        }\r\n        this.grid.hoveredEntity(undefined);\r\n    }\r\n\r\n    private onRowDragOverNative(event: JQuery.Event): void {\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onRowDragOverJQueryUI(event: Event): void {\r\n        const targetRow = event.target as Element;\r\n        const targetRowScope = ko.dataFor<PropertyBag>(targetRow);\r\n\r\n        if (typeof targetRowScope.rowIndex !== 'function') {\r\n            return;\r\n        }\r\n\r\n        const rowToMove = this.rowToMove as Row;\r\n        const rowToMoveIndex = rowToMove.rowIndex();\r\n        const targetRowIndex = targetRowScope.rowIndex() as number;\r\n\r\n        if (rowToMoveIndex > targetRowIndex) {\r\n            targetRow.classList.add('kgRow--drag-over-top');\r\n        } else {\r\n            targetRow.classList.add('kgRow--drag-over-bottom');\r\n        }\r\n    }\r\n\r\n    private onRowDragOutJQueryUI(event: Event): void {\r\n        const row = event.target as Element;\r\n        row.classList.remove('kgRow--drag-over-top');\r\n        row.classList.remove('kgRow--drag-over-bottom');\r\n    }\r\n\r\n    private onRowDropNative(event: JQuery.TriggeredEvent): void {\r\n        const dropTarget = event.currentTarget;\r\n        this.onRowDropCore(dropTarget);\r\n    }\r\n\r\n    private onRowDropJQueryUI(event: Event): void {\r\n        //We need to used target instead of currentTarget because jQueryUI sets currentTarget to window.document for some reason\r\n        const dropTarget = event.target as Element;\r\n        this.onRowDropCore(dropTarget);\r\n    }\r\n\r\n    private onRowDropCore(dropTarget: Element): void {\r\n        const prevRow = this.rowToMove;\r\n        if (!prevRow) {\r\n            return;\r\n        }\r\n        // Get the scope from the row element.\r\n        const rowScope = ko.dataFor<Row | undefined>(dropTarget);\r\n        // If we have the same Row, do nothing.\r\n        if (rowScope && prevRow !== rowScope) {\r\n            // Splice the Rows via the actual datasource\r\n            const grid = this.grid;\r\n            const sd = grid.sortedData();\r\n            const i = sd.indexOf(prevRow.entity);\r\n            const j = sd.indexOf(rowScope.entity);\r\n            sd.splice(i, 1);\r\n            sd.splice(j, 0, prevRow.entity);\r\n            grid.sortedData.valueHasMutated();\r\n            grid.searchProvider.evalFilter();\r\n        }\r\n        // clear out the rowToMove object\r\n        this.rowToMove = undefined;\r\n    }\r\n}\r\n\r\nfunction allowDragging(event: JQuery.TriggeredEvent): void {\r\n    // Needed to activate drag and drop in FireFox but requires preventDefault to be called\r\n    // in subsequent drag events to avoid strange behaviours like URL redirecting.\r\n    const dataTransfer = (event.originalEvent as DragEvent).dataTransfer;\r\n    dataTransfer && dataTransfer.setData('text', '');\r\n}\r\n\r\nfunction assignResizeEventHandler(grid: Grid, options: GridOptions): void {\r\n    const handler = function (): void {\r\n        domUtilityService.updateGridLayout(grid);\r\n        if (grid.shouldMaintainColumnRatios()) {\r\n            grid.configureColumnWidths();\r\n        }\r\n    };\r\n    if (options.resizeTarget === ResizeTarget.Root) {\r\n        grid.$root.on('resize', handler);\r\n    } else {\r\n        $(window).on('resize', handler);\r\n        ko.utils.domNodeDisposal.addDisposeCallback(grid.$root[0], function (): void {\r\n            $(window).off('resize', handler);\r\n        });\r\n    }\r\n}\r\n\r\nfunction createGroupPlaceholder(grid: Grid, text: string): JQuery {\r\n    let placeholder = grid.$groupPanel.find('.kgGroupPlaceholder');\r\n    if (placeholder.length === 0) {\r\n        placeholder = $(`\r\n<div class=\"kgGroupPlaceholder\">\r\n    <div class=\"kgGroupElement\">\r\n        <div class=\"kgGroupName\">\r\n            <span></span>\r\n            <span class=\"kgRemoveGroup ${configuration.css.removeGroupClass}\">\r\n                <span class=\"kgRemoveGroupText\">x</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>`);\r\n        grid.$groupPanel.find('.kgGroupList').append(placeholder);\r\n    }\r\n\r\n    placeholder.hide().find('span:first').text(text.trim());\r\n\r\n    return placeholder;\r\n}\r\n\r\nfunction moveGroupPlaceholderToPointer(placeholder: JQuery, event: JQuery.TriggeredEvent): void {\r\n    const groupItem = $(event.target).closest('.kgGroupItem');\r\n    if (groupItem.length > 0) {\r\n        const centerPoint =\r\n            (groupItem.offset() as JQueryCoordinates).left + (groupItem.width() || 0) / 2;\r\n        (event.originalEvent as MouseEvent).pageX <= centerPoint\r\n            ? placeholder.insertBefore(groupItem)\r\n            : placeholder.insertAfter(groupItem);\r\n    }\r\n}\r\n\r\nfunction onRowHoverIn(grid: Grid, e: JQuery.TriggeredEvent): void {\r\n    const row = ko.dataFor<Row | undefined>(e.currentTarget);\r\n    if (row) {\r\n        grid.hoveredEntity(row.entity);\r\n    }\r\n}\r\n\r\nfunction onRowHoverOut(grid: Grid): void {\r\n    grid.hoveredEntity(undefined);\r\n}\r\n","﻿import ko, { Observable, ObservableArray } from 'knockout';\r\nimport configuration from './configuration';\r\nimport { SortDirection } from './constants';\r\nimport { Entity, Maybe, SortFunc, Value } from './types';\r\nimport utils from './utils';\r\n\r\nexport interface SortColumn {\r\n    readonly field: string;\r\n    readonly sortDirection?: Observable<SortDirection>;\r\n    readonly sortingAlgorithm?: SortFunc;\r\n}\r\n\r\nexport interface SortInfo {\r\n    readonly column: SortColumn;\r\n    readonly direction: SortDirection;\r\n}\r\n\r\nconst colSortFnCache = new WeakMap<SortColumn, SortFunc>(); // cache of sorting functions. Once we create them, we don't want to keep re-doing it\r\nconst dateRE = /^(\\d\\d?)[/.-](\\d\\d?)[/.-]((\\d\\d)?\\d\\d)$/; // nasty regex for date parsing\r\n\r\nfunction guessSortFn(item: Maybe<Value>): SortFunc | undefined {\r\n    let sortFn: SortFunc | undefined; // sorting function that is guessed\r\n    if (item == null || item === '') {\r\n        return undefined;\r\n    }\r\n    const itemType = typeof item;\r\n    //check for numbers and booleans\r\n    switch (itemType) {\r\n        case 'number':\r\n            sortFn = sortNumber;\r\n            break;\r\n        case 'boolean':\r\n            sortFn = sortBool;\r\n            break;\r\n        default:\r\n            sortFn = undefined;\r\n            break;\r\n    }\r\n    //if we found one, return it\r\n    if (sortFn) {\r\n        return sortFn;\r\n    }\r\n    //check if the item is a valid Date\r\n    if (Object.prototype.toString.call(item) === '[object Date]') {\r\n        return sortDate;\r\n    }\r\n    // if we aren't left with a string, return a basic sorting function...\r\n    if (itemType !== 'string') {\r\n        return basicSort;\r\n    }\r\n    // now lets string check..\r\n    //check if the item data is a valid number\r\n    if ((item as string).match(/^-?[£$¤]?[\\d,.]+%?$/)) {\r\n        return sortNumberStr;\r\n    }\r\n    // check for a date: dd/mm/yyyy or dd/mm/yy\r\n    // can have / or . or - as separator\r\n    // can be mm/dd as well\r\n    const dateParts = (item as string).match(dateRE);\r\n    if (dateParts) {\r\n        // looks like a date\r\n        const month = parseInt(dateParts[1], 10);\r\n        const day = parseInt(dateParts[2], 10);\r\n        if (month > 12) {\r\n            // definitely dd/mm\r\n            return sortDDMMStr;\r\n        } else if (day > 12) {\r\n            return sortMMDDStr;\r\n        } else {\r\n            // looks like a date, but we can't tell which, so assume that it's DD/MM\r\n            return sortDDMMStr;\r\n        }\r\n    }\r\n    //finally just sort the normal string...\r\n    return sortAlpha;\r\n}\r\n\r\nfunction basicSort(a: Value, b: Value): number {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\n\r\nfunction sortNumber(a: number, b: number): number {\r\n    return a - b;\r\n}\r\n\r\nfunction sortNumberStr(a: string, b: string): number {\r\n    let badA = false;\r\n    let badB = false;\r\n    const numA = parseFloat(a.replace(/[^0-9.-]/g, ''));\r\n    if (isNaN(numA)) {\r\n        badA = true;\r\n    }\r\n    const numB = parseFloat(b.replace(/[^0-9.-]/g, ''));\r\n    if (isNaN(numB)) {\r\n        badB = true;\r\n    }\r\n    // we want bad ones to get pushed to the bottom... which effectively is \"greater than\"\r\n    if (badA && badB) {\r\n        return 0;\r\n    }\r\n    if (badA) {\r\n        return 1;\r\n    }\r\n    if (badB) {\r\n        return -1;\r\n    }\r\n    return numA - numB;\r\n}\r\n\r\nfunction sortAlpha(a: string, b: string): number {\r\n    const strA = a.toLowerCase();\r\n    const strB = b.toLowerCase();\r\n    return strA === strB ? 0 : strA < strB ? -1 : 1;\r\n}\r\n\r\nfunction sortBool(a: boolean, b: boolean): number {\r\n    if (a && b) {\r\n        return 0;\r\n    }\r\n    if (!a && !b) {\r\n        return 0;\r\n    } else {\r\n        return a ? 1 : -1;\r\n    }\r\n}\r\n\r\nfunction sortDate(a: Date, b: Date): number {\r\n    const timeA = a.getTime();\r\n    const timeB = b.getTime();\r\n    return timeA === timeB ? 0 : timeA < timeB ? -1 : 1;\r\n}\r\n\r\nfunction sortMMDDStr(a: string, b: string): number {\r\n    return sortDateStr(a, b, false);\r\n}\r\n\r\nfunction sortDDMMStr(a: string, b: string): number {\r\n    return sortDateStr(a, b, true);\r\n}\r\n\r\nfunction sortDateStr(a: string, b: string, isDDMM: boolean): number {\r\n    const dateA = getStrDate(a, isDDMM);\r\n    const dateB = getStrDate(b, isDDMM);\r\n    return dateA === dateB ? 0 : dateA < dateB ? -1 : 1;\r\n}\r\n\r\nfunction getStrDate(dateStr: string, isDDMM: boolean): string {\r\n    let m: string;\r\n    let d: string;\r\n    let y: string;\r\n    let date = '';\r\n    const mtch = dateStr.match(dateRE);\r\n    if (mtch) {\r\n        y = mtch[3];\r\n        d = isDDMM ? mtch[1] : mtch[2];\r\n        m = isDDMM ? mtch[2] : mtch[1];\r\n        if (m.length === 1) {\r\n            m = '0' + m;\r\n        }\r\n        if (d.length === 1) {\r\n            d = '0' + d;\r\n        }\r\n        date = y + m + d;\r\n    }\r\n    return date;\r\n}\r\n\r\nfunction sortData<T extends Entity>(unwrappedData: T[], sortInfo: SortInfo): void {\r\n    // grab the metadata for the rest of the logic\r\n    const col = sortInfo.column;\r\n    //see if we already figured out what to use to sort the column\r\n    let sortFn = colSortFnCache.get(col);\r\n    if (!sortFn) {\r\n        if (col.sortingAlgorithm !== undefined) {\r\n            sortFn = col.sortingAlgorithm;\r\n            colSortFnCache.set(col, col.sortingAlgorithm);\r\n        } else {\r\n            // try and guess what sort function to use\r\n            const item = unwrappedData[0];\r\n            if (!item) {\r\n                return;\r\n            }\r\n            sortFn = guessSortFn(item[col.field]);\r\n            //cache it\r\n            if (sortFn) {\r\n                colSortFnCache.set(col, sortFn);\r\n            } else {\r\n                // we assign the alpha sort because anything that is null/undefined will never get passed to\r\n                // the actual sorting function. It will get caught in our null check and returned to be sorted\r\n                // down to the bottom\r\n                sortFn = sortAlpha;\r\n            }\r\n        }\r\n    }\r\n    //now actually sort the data\r\n    unwrappedData.sort((itemA: Entity, itemB: Entity): number => {\r\n        const propA = configuration.evalProperty(itemA, col.field);\r\n        const propB = configuration.evalProperty(itemB, col.field);\r\n        // Empty values will be displayed at the top\r\n        const propAIsEmpty = !utils.hasValue(propA);\r\n        const propBIsEmpty = !utils.hasValue(propB);\r\n        if (propBIsEmpty) {\r\n            return propAIsEmpty ? 0 : 1;\r\n        } else if (propAIsEmpty) {\r\n            return -1;\r\n        }\r\n        //made it this far, we don't have to worry about null & undefined\r\n        const val = (sortFn as SortFunc)(propA, propB);\r\n        if (sortInfo.direction === SortDirection.Ascending) {\r\n            return val;\r\n        } else {\r\n            return 0 - val;\r\n        }\r\n    });\r\n}\r\n\r\nexport default {\r\n    sort<T extends Entity>(data: ObservableArray<T>, sortInfo?: SortInfo | SortInfo[]): void {\r\n        const unwrappedData = ko.unwrap(data);\r\n        // first make sure we are even supposed to do work\r\n        if (!unwrappedData || !sortInfo) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(sortInfo)) {\r\n            for (let i = sortInfo.length - 1; i >= 0; i--) {\r\n                sortData(unwrappedData, sortInfo[i]);\r\n            }\r\n        } else {\r\n            sortData(unwrappedData, sortInfo);\r\n        }\r\n\r\n        data(unwrappedData);\r\n    },\r\n    sortNumber,\r\n};\r\n","﻿import ko, { PureComputed } from 'knockout';\r\nimport Grid from './classes/Grid';\r\n\r\nexport interface SizeStyle {\r\n    readonly height: string;\r\n    readonly width?: string;\r\n}\r\n\r\nexport interface GridStyles {\r\n    readonly canvasStyle: PureComputed<SizeStyle>;\r\n    readonly fixedHeaderStyle: PureComputed<SizeStyle>;\r\n    readonly fixedViewportStyle: PureComputed<SizeStyle>;\r\n    readonly footerStyle: PureComputed<SizeStyle>;\r\n    readonly groupPanelStyle: PureComputed<SizeStyle>;\r\n    readonly headerScrollerStyle: PureComputed<SizeStyle>;\r\n    readonly headerStyle: PureComputed<SizeStyle>;\r\n    readonly topPanelStyle: PureComputed<SizeStyle>;\r\n    readonly viewportPanelStyle: PureComputed<SizeStyle>;\r\n    readonly viewportStyle: PureComputed<SizeStyle>;\r\n}\r\n\r\nexport default function styleProvider(grid: Grid): GridStyles {\r\n    return {\r\n        canvasStyle: ko.pureComputed(function (): SizeStyle {\r\n            return { height: grid.maxCanvasHt().toString() + 'px' };\r\n        }),\r\n        headerScrollerStyle: ko.pureComputed(function (): SizeStyle {\r\n            return { height: grid.config.headerRowHeight + 'px' };\r\n        }),\r\n        topPanelStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.rootDim.outerWidth() + 'px',\r\n                height: grid.topPanelHeight + 'px',\r\n            };\r\n        }),\r\n        headerStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.viewportDimWidth() + 'px',\r\n                height: grid.config.headerRowHeight + 'px',\r\n            };\r\n        }),\r\n        fixedHeaderStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.fixedViewportDimWidth() + 'px',\r\n                height: grid.config.headerRowHeight + 'px',\r\n            };\r\n        }),\r\n        groupPanelStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.rootDim.outerWidth() + 'px',\r\n                height: grid.config.headerRowHeight + 'px',\r\n            };\r\n        }),\r\n        viewportPanelStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.rootDim.outerWidth() + 'px',\r\n                height: grid.viewportDimHeight() + 'px',\r\n            };\r\n        }),\r\n        viewportStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.viewportDimWidth() + 'px',\r\n                height: grid.viewportDimHeight() + 'px',\r\n            };\r\n        }),\r\n        fixedViewportStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.fixedViewportDimWidth() + 'px',\r\n                height: grid.viewportDimHeight() + 'px',\r\n            };\r\n        }),\r\n        footerStyle: ko.pureComputed(function (): SizeStyle {\r\n            return {\r\n                width: grid.rootDim.outerWidth() + 'px',\r\n                height: grid.config.footerRowHeight + 'px',\r\n            };\r\n        }),\r\n    };\r\n}\r\n","import { AggregateOperation } from '../constants';\r\nimport { Entity, Maybe, Value } from '../types';\r\nimport Group from './Group';\r\n\r\nexport interface AggregationProvider {\r\n    calculateAggregationsAsync: (\r\n        aggregation: Aggregation,\r\n        group?: Group\r\n    ) => Promise<AggregationResult[]>;\r\n}\r\n\r\nexport interface AggregationResult {\r\n    readonly field: string;\r\n    readonly group?: Group;\r\n    readonly operation: AggregateOperation;\r\n    readonly result: number;\r\n}\r\n\r\nexport interface AggregateInfo {\r\n    readonly field: string;\r\n    readonly operations: AggregateOperation[];\r\n}\r\n\r\nexport class DefaultAggregationProvider implements AggregationProvider {\r\n    public constructor(\r\n        getAllEntities: () => Entity[],\r\n        getDataForAggregatesAsync: (entity: Entity, path: string) => Promise<Maybe<Value>>\r\n    ) {\r\n        this.getAllEntities = getAllEntities;\r\n        this.getDataForAggregatesAsync = getDataForAggregatesAsync;\r\n    }\r\n\r\n    public async calculateAggregationsAsync(\r\n        aggregation: Aggregation,\r\n        group?: Group\r\n    ): Promise<AggregationResult[]> {\r\n        const entities = !group ? this.getAllEntities() : group.flattenChildren();\r\n        const data = await this.getValuesAsync(entities, aggregation);\r\n        const results: AggregationResult[] = [];\r\n        let total: number | undefined;\r\n        if (aggregation.operations.includes(AggregateOperation.Total)) {\r\n            total = calculateTotal(data);\r\n            results.push({\r\n                field: aggregation.field,\r\n                group,\r\n                operation: AggregateOperation.Total,\r\n                result: total,\r\n            });\r\n        }\r\n        if (aggregation.operations.includes(AggregateOperation.Average)) {\r\n            results.push({\r\n                field: aggregation.field,\r\n                group,\r\n                operation: AggregateOperation.Average,\r\n                result: calculateAverage(data, total),\r\n            });\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    private readonly getAllEntities: () => Entity[];\r\n    private readonly getDataForAggregatesAsync: (\r\n        entity: Entity,\r\n        path: string\r\n    ) => Promise<Maybe<Value>>;\r\n\r\n    private getValuesAsync(entities: Entity[], aggregation: Aggregation): Promise<number[]> {\r\n        const getDataPromises = entities.map(\r\n            async (entity): Promise<number> => {\r\n                let value = await this.getDataForAggregatesAsync(entity, aggregation.field);\r\n                return typeof value === 'number' ? value : 0;\r\n            }\r\n        );\r\n        return Promise.all(getDataPromises);\r\n    }\r\n}\r\n\r\nfunction calculateAverage(data: number[], total?: number): number {\r\n    if (total === undefined) {\r\n        total = calculateTotal(data);\r\n    }\r\n    return total / data.length;\r\n}\r\n\r\nfunction calculateTotal(data: number[]): number {\r\n    let result = 0;\r\n    data.forEach((value): void => {\r\n        result += value;\r\n    });\r\n    return result;\r\n}\r\n\r\nexport default class Aggregation {\r\n    public constructor(field: string) {\r\n        this.field = field;\r\n        this.operations = [];\r\n    }\r\n\r\n    public addOperation(operation: AggregateOperation): void {\r\n        if (this.operations.indexOf(operation) === -1) {\r\n            this.operations.push(operation);\r\n        }\r\n    }\r\n\r\n    public removeOperation(operation: AggregateOperation): void {\r\n        const operationIndex = this.operations.indexOf(operation);\r\n        if (operationIndex !== -1) {\r\n            this.operations.splice(operationIndex, 1);\r\n        }\r\n    }\r\n\r\n    public readonly field: string;\r\n    public readonly operations: AggregateOperation[];\r\n}\r\n","import ko from 'knockout';\r\nimport Aggregation, {\r\n    AggregationResult,\r\n    AggregationProvider,\r\n    AggregateInfo,\r\n} from './DefaultAggregationProvider';\r\nimport { AggregateOperation, GridEventType } from '../constants';\r\nimport Grid from './Grid';\r\nimport Group from './Group';\r\n\r\nexport class AggregationService {\r\n    public constructor(grid: Grid, aggregationProvider: AggregationProvider) {\r\n        this.grid = grid;\r\n\r\n        this.aggregationPromises = new Map();\r\n        this.aggregationGroupPromises = new Map();\r\n        this.aggregationProvider = aggregationProvider;\r\n        this.aggregateConfig = [];\r\n        this.aggregatingFields = ko.observableArray();\r\n    }\r\n\r\n    public readonly aggregateConfig: Aggregation[];\r\n\r\n    private readonly grid: Grid;\r\n    private readonly aggregationPromises: Map<string, Promise<AggregationResult[]>>;\r\n    private readonly aggregationGroupPromises: Map<string, Promise<AggregationResult[]>[]>;\r\n    private readonly aggregationProvider: AggregationProvider;\r\n    private readonly aggregatingFields: ko.ObservableArray<string>;\r\n\r\n    public isAggregating(field: string, operation: AggregateOperation): boolean {\r\n        const key = getAggregatePromiseKey(field, operation);\r\n        return this.aggregatingFields().includes(key);\r\n    }\r\n\r\n    public async addAggregateColumnAsync(\r\n        field: string,\r\n        operation: AggregateOperation\r\n    ): Promise<void> {\r\n        const aggregation = this.getOrCreateAggregation(field);\r\n        aggregation.addOperation(operation);\r\n\r\n        const key = getAggregatePromiseKey(field, operation);\r\n        if (this.aggregatingFields.indexOf(key) === -1) {\r\n            this.aggregatingFields.push(key);\r\n        }\r\n\r\n        this.onAggregationConfigChanged(field);\r\n\r\n        await Promise.all([\r\n            this.calculateGridAggregationsAsync(aggregation),\r\n            this.calculateGroupAggregationsAsync(aggregation),\r\n        ]);\r\n    }\r\n\r\n    public async refreshGridAggregatesAsync(): Promise<void> {\r\n        this.clearGridAggregationResults();\r\n        const calculateGridAggregationsPromises = this.aggregateConfig.map(\r\n            (aggregation): Promise<void> => this.calculateGridAggregationsAsync(aggregation)\r\n        );\r\n        await Promise.all(calculateGridAggregationsPromises);\r\n    }\r\n\r\n    public async refreshGroupAggregatesAsync(): Promise<void> {\r\n        this.clearGroupAggregationResults();\r\n        const calculateGroupAggregationsPromises = this.aggregateConfig.map(\r\n            (aggregation): Promise<void> => this.calculateGroupAggregationsAsync(aggregation)\r\n        );\r\n        await Promise.all(calculateGroupAggregationsPromises);\r\n    }\r\n\r\n    private async calculateGridAggregationsAsync(aggregation: Aggregation): Promise<void> {\r\n        const aggregationPromise = this.aggregationProvider.calculateAggregationsAsync(aggregation);\r\n        const field = aggregation.field;\r\n\r\n        aggregation.operations.forEach((operation): void => {\r\n            this.aggregationPromises.set(\r\n                getAggregatePromiseKey(field, operation),\r\n                aggregationPromise\r\n            );\r\n        });\r\n\r\n        const newResults = await aggregationPromise;\r\n        const currentAggregation = this.aggregateConfig.find(\r\n            (aggregation): boolean => aggregation.field === field\r\n        );\r\n\r\n        if (currentAggregation) {\r\n            const validAggregationResults: AggregationResult[] = [];\r\n\r\n            newResults.forEach((aggregationResult): void => {\r\n                const key = getAggregatePromiseKey(\r\n                    aggregationResult.field,\r\n                    aggregationResult.operation\r\n                );\r\n                const currentPromise = this.aggregationPromises.get(key);\r\n                if (currentPromise === aggregationPromise) {\r\n                    this.aggregationPromises.delete(key);\r\n                    validAggregationResults.push(aggregationResult);\r\n                }\r\n            });\r\n            if (validAggregationResults.length) {\r\n                this.grid.aggregateResults(\r\n                    this.grid.aggregateResults().concat(validAggregationResults)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    public removeAggregateColumn(field: string, operation: AggregateOperation): void {\r\n        const key = getAggregatePromiseKey(field, operation);\r\n        this.aggregationPromises.delete(key);\r\n        this.aggregationGroupPromises.delete(key);\r\n        this.aggregatingFields.remove(key);\r\n\r\n        const aggregationIndex = this.aggregateConfig.findIndex((a): boolean => a.field === field);\r\n        if (aggregationIndex !== -1) {\r\n            const aggregation = this.aggregateConfig[aggregationIndex];\r\n            aggregation.removeOperation(operation);\r\n            if (aggregation.operations.length === 0) {\r\n                this.aggregateConfig.splice(aggregationIndex, 1);\r\n            }\r\n\r\n            this.onAggregationConfigChanged(field, operation);\r\n        }\r\n    }\r\n\r\n    public async toggleAggregateAsync(field: string, operation: AggregateOperation): Promise<void> {\r\n        const aggregation = this.aggregateConfig.find(\r\n            (a): boolean => a.field === field && a.operations.includes(operation)\r\n        );\r\n        if (aggregation) {\r\n            this.removeAggregateColumn(field, operation);\r\n        } else {\r\n            await this.addAggregateColumnAsync(field, operation);\r\n        }\r\n        this.grid.trigger(GridEventType.SettingsChangedByUser, {\r\n            aggregateInfos: this.aggregateConfig,\r\n        });\r\n    }\r\n\r\n    private getOrCreateAggregation(field: string): Aggregation {\r\n        const aggregation = this.aggregateConfig.find((a): boolean => a.field === field);\r\n        if (aggregation) {\r\n            return aggregation;\r\n        }\r\n\r\n        const result = new Aggregation(field);\r\n        this.aggregateConfig.push(result);\r\n        return result;\r\n    }\r\n\r\n    private onAggregationConfigChanged(field: string, operation?: AggregateOperation): void {\r\n        const removeFunc = (r: AggregationResult): boolean =>\r\n            r.field === field && (operation === undefined || operation === r.operation);\r\n\r\n        this.grid.aggregateResults.remove(removeFunc);\r\n        this.grid.rowFactory.groupCache.forEach((group): void => {\r\n            group.aggregateResults.remove(removeFunc);\r\n        });\r\n    }\r\n\r\n    public async overrideAggregateInfosAsync(aggregateInfos: AggregateInfo[]): Promise<void> {\r\n        this.aggregateConfig.length = 0;\r\n        this.clearGridAggregationResults();\r\n        this.clearGroupAggregationResults();\r\n        this.aggregatingFields.removeAll();\r\n        const promises: Promise<void>[] = [];\r\n        aggregateInfos.forEach((aggregateInfo): void => {\r\n            aggregateInfo.operations.forEach((operation): void => {\r\n                promises.push(this.addAggregateColumnAsync(aggregateInfo.field, operation));\r\n            });\r\n        });\r\n        await Promise.all(promises);\r\n    }\r\n\r\n    private clearGridAggregationResults(): void {\r\n        this.grid.aggregateResults.removeAll();\r\n        this.aggregationPromises.clear();\r\n    }\r\n\r\n    private clearGroupAggregationResults(): void {\r\n        this.grid.rowFactory.groupCache.forEach((group): void => {\r\n            group.aggregateResults.removeAll();\r\n        });\r\n        this.aggregationGroupPromises.clear();\r\n    }\r\n\r\n    private async calculateGroupAggregationsAsync(aggregation: Aggregation): Promise<void> {\r\n        const groupAggregationsPromises: Promise<AggregationResult[]>[] = [];\r\n\r\n        this.grid.rowFactory.groupCache.forEach((group): void => {\r\n            const promise = this.aggregationProvider.calculateAggregationsAsync(aggregation, group);\r\n            groupAggregationsPromises.push(promise);\r\n        });\r\n\r\n        aggregation.operations.forEach((operation): void => {\r\n            this.aggregationGroupPromises.set(\r\n                getAggregatePromiseKey(aggregation.field, operation),\r\n                groupAggregationsPromises\r\n            );\r\n        });\r\n\r\n        const allResults = await Promise.all(groupAggregationsPromises);\r\n        const currentAggregation = this.aggregateConfig.find(\r\n            (aggregation): boolean => aggregation.field === aggregation.field\r\n        );\r\n\r\n        if (currentAggregation) {\r\n            const successfulAggregations = new Set<string>();\r\n            allResults.forEach((results): void => {\r\n                results.forEach((aggregationResult): void => {\r\n                    const key = getAggregatePromiseKey(\r\n                        aggregationResult.field,\r\n                        aggregationResult.operation\r\n                    );\r\n                    const currentPromises = this.aggregationGroupPromises.get(key);\r\n                    if (currentPromises === groupAggregationsPromises) {\r\n                        successfulAggregations.add(key);\r\n                        const group = aggregationResult.group as Group;\r\n                        group.aggregateResults.push(aggregationResult);\r\n                    }\r\n                });\r\n            });\r\n            successfulAggregations.forEach((key): void => {\r\n                this.aggregationGroupPromises.delete(key);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction getAggregatePromiseKey(field: string, operation: AggregateOperation): string {\r\n    return field + operation;\r\n}\r\n","﻿import $ from 'jquery';\r\nimport ko, { Observable, PureComputed } from 'knockout';\r\nimport { GridEventType, SortDirection } from '../constants';\r\nimport domUtilityService from '../domUtilityService';\r\nimport { SortColumn } from '../sortService';\r\nimport templates from '../templates/templates';\r\nimport { Maybe, SortFunc, Value } from '../types';\r\nimport Grid from './Grid';\r\nimport Row from './Row';\r\n\r\nexport interface ColumnConfig {\r\n    readonly colDef: ColumnDefinition;\r\n    readonly enableResize?: boolean;\r\n    readonly enableSort?: boolean;\r\n    readonly index: number;\r\n    readonly isGroupCol?: boolean;\r\n    readonly resizeOnDataCallback?: (col: Column) => void;\r\n    readonly sortCallback?: (col: Column, direction: SortDirection, isMulti: boolean) => void;\r\n}\r\n\r\nexport interface ColumnDefinition {\r\n    readonly canAggregate?: boolean;\r\n    readonly cellClass?: string;\r\n    readonly cellFilter?: (prop: any) => Maybe<Value>;\r\n    readonly cellTemplate?: string;\r\n    readonly displayName?: string;\r\n    readonly field: string;\r\n    readonly fixed?: boolean;\r\n    readonly headerCellTemplate?: string;\r\n    readonly headerClass?: string;\r\n    readonly maxWidth?: number;\r\n    readonly minWidth?: number;\r\n    readonly resizable?: boolean;\r\n    readonly sortable?: boolean;\r\n    readonly sortFn?: SortFunc;\r\n    readonly visible?: boolean;\r\n    width?: string | number; // \\d+ | '\\d+%' | '\\*+'\r\n}\r\n\r\nconst doubleClickDelay = 500;\r\n\r\nexport default class Column implements SortColumn {\r\n    public constructor(config: ColumnConfig, grid: Grid) {\r\n        const colDef = config.colDef;\r\n\r\n        this.grid = grid;\r\n        this.clicks = 0;\r\n        this.startMousePosition = 0;\r\n        this.timer = undefined;\r\n        this.eventTarget = undefined;\r\n\r\n        this.colDef = colDef;\r\n        this.field = colDef.field;\r\n        this.fixed = colDef.fixed || false;\r\n        this.fixedClass = getFixedClass(this.fixed);\r\n        this.index = config.index;\r\n        this.isGroupCol = !!config.isGroupCol;\r\n        this.displayName = ko.observable(colDef.displayName || colDef.field);\r\n\r\n        this.width = typeof colDef.width === 'number' ? colDef.width : 0;\r\n        this.origWidth = this.width;\r\n        this.minWidth = colDef.minWidth || 50;\r\n        this.maxWidth = colDef.maxWidth || 9000;\r\n\r\n        this.cellClass = getCellClass(colDef.cellClass, this.fixedClass);\r\n        this.cellFilter = colDef.cellFilter;\r\n        this.cellTemplate = colDef.cellTemplate;\r\n\r\n        this.headerClass = getCellClass(colDef.headerClass, this.fixedClass);\r\n        this.headerCellTemplate =\r\n            colDef.headerCellTemplate || templates.defaultHeaderCellTemplate();\r\n\r\n        this.groupIndex = ko.observable(-1);\r\n        this.isGroupedBy = ko.pureComputed(this.readIsGroupedBy, this);\r\n        this.groupedByClass = ko.pureComputed(this.readGroupedByClass, this);\r\n\r\n        this._visible = ko.observable(colDef.visible !== false);\r\n        this.visible = ko.pureComputed({\r\n            read: this.readVisible,\r\n            write: this.writeVisible,\r\n            owner: this,\r\n        });\r\n\r\n        this.sortable = !!config.enableSort && colDef.sortable !== false;\r\n        this.sortDirection = ko.observable<SortDirection>(SortDirection.Unspecified);\r\n        this.sortingAlgorithm = colDef.sortFn;\r\n        this.sortCallback = config.sortCallback;\r\n        this.showSortButtonUp = ko.pureComputed(this.readShowSortButtonUp, this);\r\n        this.showSortButtonDown = ko.pureComputed(this.readShowSortButtonDown, this);\r\n        this.noSortVisible = ko.pureComputed(this.readNoSortVisible, this);\r\n\r\n        this.resizable =\r\n            !!config.enableResize &&\r\n            colDef.resizable !== false &&\r\n            (!grid.legacyMode || !this.fixed);\r\n        this.resizeOnDataCallback = config.resizeOnDataCallback;\r\n    }\r\n\r\n    public readonly cellClass: string;\r\n    public readonly cellFilter?: (prop: any) => Maybe<Value>;\r\n    public readonly cellTemplate?: string;\r\n    public readonly colDef: ColumnDefinition;\r\n    public readonly displayName: Observable<string>;\r\n    public readonly field: string;\r\n    public readonly fixed: boolean;\r\n    public readonly fixedClass: string;\r\n    public readonly groupedByClass: PureComputed<string>;\r\n    public readonly groupIndex: Observable<number>;\r\n    public readonly headerCellTemplate: string;\r\n    public readonly headerClass: string;\r\n    public readonly isGroupCol: boolean;\r\n    public readonly isGroupedBy: PureComputed<boolean>;\r\n    public readonly maxWidth: number;\r\n    public readonly minWidth: number;\r\n    public readonly noSortVisible: PureComputed<boolean>;\r\n    public readonly resizable: boolean;\r\n    public readonly showSortButtonDown: PureComputed<boolean>;\r\n    public readonly showSortButtonUp: PureComputed<boolean>;\r\n    public readonly sortable: boolean;\r\n    public readonly sortDirection: Observable<SortDirection>;\r\n    public readonly sortingAlgorithm?: SortFunc;\r\n    public readonly visible: PureComputed<boolean>;\r\n\r\n    public index: number;\r\n    public width: number;\r\n\r\n    private readonly _visible: Observable<boolean>;\r\n    private readonly grid: Grid;\r\n    private readonly resizeOnDataCallback?: (col: Column) => void;\r\n    private readonly sortCallback?: (\r\n        col: Column,\r\n        direction: SortDirection,\r\n        isMulti: boolean\r\n    ) => void;\r\n\r\n    private clicks: number;\r\n    private eventTarget?: HTMLElement;\r\n    private origWidth: number;\r\n    private startMousePosition: number;\r\n    private timer?: number;\r\n\r\n    public getProperty(row: Row): Maybe<Value> {\r\n        let ret = row.getProperty(this.field);\r\n        if (this.cellFilter) {\r\n            ret = this.cellFilter(ret);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public toggleVisible(val?: boolean): void {\r\n        const v = val == null ? !this._visible() : val;\r\n        this._visible(v);\r\n        domUtilityService.buildStyles(this.grid);\r\n    }\r\n\r\n    public sort(data?: any, event?: JQuery.Event): boolean {\r\n        if (!this.sortable) {\r\n            return true; // column sorting is disabled, do nothing\r\n        }\r\n        const dir =\r\n            this.sortDirection() === SortDirection.Ascending\r\n                ? SortDirection.Descending\r\n                : SortDirection.Ascending;\r\n        this.sortDirection(dir);\r\n        if (this.sortCallback) {\r\n            this.sortCallback(this, dir, !!(event && event.shiftKey));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public gripClick(data: any, event: JQuery.Event): void {\r\n        event.stopPropagation();\r\n        this.clicks++; //count clicks\r\n        if (this.clicks === 1) {\r\n            this.timer = window.setTimeout((): void => {\r\n                //Here you can add a single click action.\r\n                this.clicks = 0; //after action performed, reset counter\r\n            }, doubleClickDelay);\r\n        } else {\r\n            clearTimeout(this.timer); //prevent single-click action\r\n            if (this.resizeOnDataCallback) {\r\n                this.resizeOnDataCallback(this); //perform double-click action\r\n            }\r\n            this.clicks = 0; //after action performed, reset counter\r\n        }\r\n    }\r\n\r\n    public gripOnMouseDown(event: JQuery.MouseDownEvent): boolean {\r\n        event.stopPropagation();\r\n        if (event.target.parentElement) {\r\n            this.eventTarget = event.target.parentElement;\r\n            if (this.eventTarget) {\r\n                this.eventTarget.style.cursor = 'col-resize';\r\n            }\r\n            this.startMousePosition = event.clientX;\r\n            this.origWidth = this.width;\r\n            $(document)\r\n                .on('mousemove.kgColumn', this.onMouseMove.bind(this))\r\n                .on('mouseup.kgColumn', this.gripOnMouseUp.bind(this));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private onMouseMove(event: JQuery.TriggeredEvent): boolean {\r\n        event.stopPropagation();\r\n        const diff = (event as JQuery.MouseMoveEvent).clientX - this.startMousePosition;\r\n        const newWidth = diff + this.origWidth;\r\n        this.width =\r\n            newWidth < this.minWidth\r\n                ? this.minWidth\r\n                : newWidth > this.maxWidth\r\n                ? this.maxWidth\r\n                : newWidth;\r\n        domUtilityService.buildStyles(this.grid);\r\n        return false;\r\n    }\r\n\r\n    private gripOnMouseUp(event: JQuery.TriggeredEvent): boolean {\r\n        event.stopPropagation();\r\n        $(document).off('mousemove.kgColumn mouseup.kgColumn');\r\n        const htmlTarget = this.eventTarget as HTMLElement;\r\n        if (htmlTarget) {\r\n            htmlTarget.style.cursor = this.sortable ? 'pointer' : 'default';\r\n            this.eventTarget = undefined;\r\n            this.grid.trigger(GridEventType.ColumnWidthsChanged, [this]);\r\n            this.grid.trigger(GridEventType.SettingsChangedByUser, {\r\n                columnDefs: this.grid.settings().columnDefs,\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private readIsGroupedBy(): boolean {\r\n        return this.groupIndex() !== -1;\r\n    }\r\n\r\n    private readGroupedByClass(): string {\r\n        return this.isGroupedBy() ? 'kgGroupedByIcon' : 'kgGroupIcon';\r\n    }\r\n\r\n    private readNoSortVisible(): boolean {\r\n        return !this.sortDirection();\r\n    }\r\n\r\n    private readShowSortButtonDown(): boolean {\r\n        return this.sortable && this.sortDirection() === SortDirection.Descending;\r\n    }\r\n\r\n    private readShowSortButtonUp(): boolean {\r\n        return this.sortable && this.sortDirection() === SortDirection.Ascending;\r\n    }\r\n\r\n    private readVisible(): boolean {\r\n        return this._visible();\r\n    }\r\n\r\n    private writeVisible(val: boolean): void {\r\n        this.toggleVisible(val);\r\n    }\r\n}\r\n\r\nfunction getCellClass(cellClass: string | undefined, fixedClass: string): string {\r\n    return cellClass ? cellClass + ' ' + fixedClass : fixedClass;\r\n}\r\n\r\nfunction getFixedClass(fixed: boolean): string {\r\n    return fixed ? 'kgFixedColumn' : 'kgNonFixedColumn';\r\n}\r\n","import ko from 'knockout';\r\nimport { GridEventType, ResizeTarget, RowReorderingMode } from '../constants';\r\nimport { GridContainers } from '../domUtilityService';\r\nimport { SortInfo } from '../sortService';\r\nimport { Entity, GridRow, Maybe, PropertyBag, Value } from '../types';\r\nimport Column, { ColumnDefinition } from './Column';\r\nimport { AggregateInfo, AggregationProvider } from './DefaultAggregationProvider';\r\nimport Dimension from './Dimension';\r\nimport Grid from './Grid';\r\nimport Group from './Group';\r\n\r\ninterface Defaults {\r\n    [key: string]: () => Maybe<Value>;\r\n}\r\n\r\nexport interface FilterOptions {\r\n    readonly filterThrottle?: number;\r\n    readonly useExternalFilter: boolean;\r\n}\r\n\r\nexport interface GridConfig extends Readonly<GridConfigBase> {\r\n    readonly filterOptions: FilterOptions;\r\n}\r\n\r\nexport interface GridConfigBase {\r\n    canSelectRows: boolean;\r\n    enableColumnResize: boolean;\r\n    enableSorting: boolean;\r\n    evalPropertyForGroup?: (entity: Entity, colDef: ColumnDefinition) => Maybe<Value>;\r\n    footerRowHeight: number;\r\n    headerRowHeight: number;\r\n    rowReorderingHandle?: string;\r\n    rowReorderingMode?: RowReorderingMode;\r\n    tabIndex: number;\r\n    useExternalSorting: boolean;\r\n}\r\n\r\nexport interface GridEvent<T> {\r\n    readonly data: T;\r\n    readonly type: GridEventType;\r\n}\r\n\r\nexport interface RowBoundData {\r\n    readonly row: GridRow;\r\n    readonly rowElement: HTMLElement;\r\n}\r\n\r\nexport type GridEventHandler<T> = (gridEvent: GridEvent<T>) => void;\r\n\r\nexport interface GridEventMap {\r\n    [GridEventType.ColumnWidthsChanged]: Column[];\r\n    [GridEventType.GroupInfosChanged]: GroupInfo[];\r\n    [GridEventType.GroupToggleStarted]: Group;\r\n    [GridEventType.RowBound]: RowBoundData;\r\n    [GridEventType.SettingsChangedByUser]: GridSettings;\r\n    [GridEventType.SortInfosChanged]: SortInfo[];\r\n}\r\n\r\nexport interface GridEventOptions {\r\n    groupInfosChanged?: GridEventHandler<GroupInfo[]>;\r\n    sortInfosChanged?: GridEventHandler<SortInfo[]>;\r\n}\r\n\r\nexport interface GridOptions extends Partial<GridConfigBase> {\r\n    aggregateInfos?: AggregateInfo[];\r\n    aggregationProvider?: AggregationProvider;\r\n    columnDefs?: ColumnDefinition[];\r\n    data: ko.ObservableArray<Entity>;\r\n    disableTextSelection?: boolean;\r\n    enableGrouping?: boolean;\r\n    enablePaging?: boolean;\r\n    ensureCanGroupData?: () => boolean;\r\n    events?: GridEventOptions;\r\n    filterOptions?: Partial<FilterOptions & { filterText: ko.Observable<string> }>;\r\n    fixedHeaderRowTemplate?: string;\r\n    fixedRowTemplate?: string;\r\n    footerVisible?: boolean;\r\n    gridContainers: GridContainers;\r\n    gridDim: Dimension;\r\n    gridTemplate?: string;\r\n    groupInfos?: GroupInfo[];\r\n    groupRowTemplate?: string;\r\n    headerRowTemplate?: string;\r\n    jqueryUITheme?: boolean;\r\n    legacyMode: boolean;\r\n    maintainColumnRatios?: boolean;\r\n    multiSelect?: boolean;\r\n    pagingOptions?: Partial<PagingOptions>;\r\n    plugins?: Plugin[];\r\n    resizeTarget?: ResizeTarget;\r\n    rowBindingString?: string;\r\n    rowHeight?: number;\r\n    rowTemplate?: string;\r\n    selectedItems?: ko.ObservableArray<Entity>;\r\n    showColumnMenu?: boolean;\r\n    showFilter?: boolean;\r\n    sortInfos?: SortInfo[] | undefined;\r\n    userViewModel: PropertyBag;\r\n    viewportBindingString?: string;\r\n}\r\n\r\nexport interface GridSettings {\r\n    readonly aggregateInfos?: AggregateInfo[];\r\n    readonly columnDefs?: ColumnDefinition[];\r\n    readonly groupInfos?: GroupInfo[];\r\n    readonly sortInfos?: SortInfo[];\r\n}\r\n\r\nexport interface GroupInfo {\r\n    readonly field: string;\r\n}\r\n\r\nexport interface PagingOptions {\r\n    readonly currentPage: ko.Observable<number>;\r\n    readonly pageSize: ko.Observable<number>;\r\n    readonly pageSizes: ko.ObservableArray<number>;\r\n    readonly totalServerItems: ko.Observable<number>;\r\n}\r\n\r\ninterface Plugin {\r\n    onGridInit: (grid: Grid) => void;\r\n}\r\n\r\nconst defaults: Defaults = {\r\n    canSelectRows: returnTrue,\r\n    enableColumnResize: returnTrue,\r\n    enableSorting: returnTrue,\r\n    evalPropertyForGroup: returnUndefined,\r\n    footerRowHeight: (): number => 55,\r\n    headerRowHeight: (): number => 30,\r\n    rowReorderingHandle: returnUndefined,\r\n    rowReorderingMode: returnUndefined,\r\n    tabIndex: (): number => -1,\r\n    useExternalSorting: returnFalse,\r\n};\r\n\r\nconst filterOptionsDefaults: Defaults = {\r\n    filterThrottle: returnUndefined,\r\n    useExternalFilter: returnFalse,\r\n};\r\n\r\nconst pagingOptionsDefaults: Defaults = {\r\n    currentPage: (): ko.Observable<number> => ko.observable(1),\r\n    pageSize: (): ko.Observable<number> => ko.observable(250),\r\n    pageSizes: (): ko.ObservableArray<number> => ko.observableArray([250, 500, 1000]),\r\n    totalServerItems: (): ko.Observable<number> => ko.observable(0),\r\n};\r\n\r\nfunction mergeWithDefaults<T>(options: Partial<T> | undefined, defaults: Defaults): T {\r\n    const result: PropertyBag = {};\r\n    Object.keys(defaults).forEach(function (key): void {\r\n        let value = options && (options as PropertyBag)[key];\r\n        result[key] = value != null ? value : defaults[key]();\r\n    });\r\n\r\n    return result as any;\r\n}\r\n\r\nfunction returnFalse(): boolean {\r\n    return false;\r\n}\r\n\r\nfunction returnUndefined(): undefined {\r\n    return undefined;\r\n}\r\n\r\nfunction returnTrue(): boolean {\r\n    return true;\r\n}\r\n\r\nexport function getGridConfig(options: GridOptions): GridConfig {\r\n    const result = mergeWithDefaults(options, defaults);\r\n    result.filterOptions = mergeWithDefaults(options.filterOptions, filterOptionsDefaults);\r\n    result.footerRowHeight = options.footerVisible !== false ? result.footerRowHeight : 0;\r\n\r\n    return result as GridConfig;\r\n}\r\n\r\nexport function getPagingOptions(options: GridOptions): PagingOptions {\r\n    return mergeWithDefaults(options.pagingOptions, pagingOptionsDefaults);\r\n}\r\n","export type MessageHandler = (data: any) => void;\r\n\r\nconst namespaceDelimiter = '.';\r\n\r\nexport default class MessageBus {\r\n    public constructor() {\r\n        this.subscriptions = new Map();\r\n    }\r\n\r\n    public publish(messageType: string, data: any): void {\r\n        const namespace = getMessageTypeNamespace(messageType);\r\n        if (namespace) {\r\n            const messageTypePrefix = getMessageTypeWithoutNamespace(messageType);\r\n            const messageHandlers = this.subscriptions.get(messageTypePrefix);\r\n            messageHandlers?.get(namespace)?.forEach((handler): void => handler(data));\r\n        } else {\r\n            const messageHandlers = this.subscriptions.get(messageType);\r\n            messageHandlers?.forEach((h): void => h.forEach((handler): void => handler(data)));\r\n        }\r\n    }\r\n\r\n    public subscribe(messageType: string, messageHandler: MessageHandler): void {\r\n        const messageTypePrefix = getMessageTypeWithoutNamespace(messageType);\r\n        let messageHandlers = this.subscriptions.get(messageTypePrefix);\r\n        if (!messageHandlers) {\r\n            messageHandlers = new Map();\r\n            this.subscriptions.set(messageTypePrefix, messageHandlers);\r\n        }\r\n        const namespace = getMessageTypeNamespace(messageType);\r\n        let messageHandlersOfNamespace = messageHandlers.get(namespace);\r\n        if (!messageHandlersOfNamespace) {\r\n            messageHandlersOfNamespace = [];\r\n            messageHandlers.set(namespace, messageHandlersOfNamespace);\r\n        }\r\n        messageHandlersOfNamespace.push(messageHandler);\r\n    }\r\n\r\n    public unsubscribe(messageType: string, messageHandler?: MessageHandler): void {\r\n        const namespace = getMessageTypeNamespace(messageType);\r\n        if (namespace) {\r\n            const messageTypePrefix = getMessageTypeWithoutNamespace(messageType);\r\n            const messageHandlers = this.subscriptions.get(messageTypePrefix);\r\n            const messageHandlersOfNamespace = messageHandlers?.get(namespace);\r\n            if (messageHandlersOfNamespace) {\r\n                if (messageHandler) {\r\n                    removeAllMessageHandlers(messageHandlersOfNamespace, messageHandler);\r\n                } else {\r\n                    messageHandlers?.delete(namespace);\r\n                }\r\n            }\r\n        } else {\r\n            const messageHandlers = this.subscriptions.get(messageType);\r\n            if (messageHandler) {\r\n                messageHandlers?.forEach((messageHandlersOfNamespace): void => {\r\n                    removeAllMessageHandlers(messageHandlersOfNamespace, messageHandler);\r\n                });\r\n            } else {\r\n                this.subscriptions.delete(messageType);\r\n            }\r\n        }\r\n    }\r\n\r\n    private readonly subscriptions: Map<string, Map<string, MessageHandler[]>>;\r\n}\r\n\r\nfunction removeAllMessageHandlers(\r\n    messageHandlers: MessageHandler[],\r\n    messageHandler: MessageHandler\r\n): void {\r\n    let index = -1;\r\n    do {\r\n        index = messageHandlers.indexOf(messageHandler);\r\n        if (index >= 0) {\r\n            messageHandlers.splice(index, 1);\r\n        }\r\n    } while (index !== -1);\r\n}\r\n\r\nfunction getMessageTypeNamespace(messageType: string): string {\r\n    const indexNamespaceDelimiter = messageType.indexOf(namespaceDelimiter);\r\n    return indexNamespaceDelimiter !== -1 ? messageType.substring(indexNamespaceDelimiter) : '';\r\n}\r\n\r\nfunction getMessageTypeWithoutNamespace(messageType: string): string {\r\n    const indexNamespaceDelimiter = messageType.indexOf(namespaceDelimiter);\r\n    return indexNamespaceDelimiter !== -1\r\n        ? messageType.substring(0, indexNamespaceDelimiter)\r\n        : messageType;\r\n}\r\n","﻿export default class Range {\r\n    public constructor(top: number, bottom: number) {\r\n        this.topRow = top;\r\n        this.bottomRow = bottom;\r\n    }\r\n\r\n    public readonly topRow: number;\r\n    public readonly bottomRow: number;\r\n}\r\n","import ko, { Observable, PureComputed } from 'knockout';\r\nimport configuration from '../configuration';\r\nimport { GridEventType } from '../constants';\r\nimport { Entity, GridRow } from '../types';\r\nimport Column from './Column';\r\nimport { AggregationResult } from './DefaultAggregationProvider';\r\nimport Grid from './Grid';\r\n\r\nexport interface GroupEntity extends Entity {\r\n    readonly groupChildren: Group[];\r\n    readonly groupIndex: number;\r\n    readonly children: Entity[];\r\n    readonly column: Column;\r\n    readonly depth: number;\r\n    readonly label: string;\r\n\r\n    parent?: Group;\r\n}\r\n\r\nexport default class Group implements GridRow {\r\n    public constructor(groupEntity: GroupEntity, grid: Grid) {\r\n        this.entity = groupEntity;\r\n        this.grid = grid;\r\n\r\n        this.aggregateResults = ko.observableArray();\r\n        this.groupChildren = groupEntity.groupChildren;\r\n        this.groupClass = ko.pureComputed(this.readGroupClass, this);\r\n        this.children = groupEntity.children;\r\n        this.collapsed = ko.observable<boolean>(true);\r\n        this.column = groupEntity.column;\r\n        this.depth = groupEntity.depth;\r\n        this.isGroupRow = true;\r\n        this.isEven = ko.observable<boolean>(false);\r\n        this.isOdd = ko.observable<boolean>(false);\r\n        this.label = groupEntity.label;\r\n        this.offsetLeft = (groupEntity.depth * 25).toString() + 'px';\r\n        this.offsetTop = ko.observable('0px');\r\n        this.parent = groupEntity.parent;\r\n        this.isSelected = ko.pureComputed(this.readIsSelected, this);\r\n        this.isFullySelected = ko.pureComputed(this.readIsFullySelected, this);\r\n        this.firstChild = ko.pureComputed(this.readFirstChild, this);\r\n        this.selectedChildren = ko.pureComputed(this.readSelectedChildren, this);\r\n        this.totalChildren = ko.pureComputed(this.readTotalChildren, this);\r\n    }\r\n\r\n    public readonly aggregateResults: ko.ObservableArray<AggregationResult>;\r\n    public readonly groupChildren: Group[];\r\n    public readonly groupClass: PureComputed<string>;\r\n    public readonly children: Entity[];\r\n    public readonly collapsed: Observable<boolean>;\r\n    public readonly column: Column;\r\n    public readonly depth: number;\r\n    public readonly entity: GroupEntity;\r\n    public readonly firstChild: PureComputed<Entity | undefined>;\r\n    public readonly isGroupRow: boolean;\r\n    public readonly isEven: Observable<boolean>;\r\n    public readonly isOdd: Observable<boolean>;\r\n    public readonly isFullySelected: PureComputed<boolean>;\r\n    public readonly isSelected: PureComputed<boolean>;\r\n    public readonly label: string;\r\n    public readonly offsetLeft: string;\r\n    public readonly offsetTop: Observable<string>;\r\n    public parent?: Group;\r\n    public readonly selectedChildren: PureComputed<number>;\r\n    public readonly totalChildren: PureComputed<number>;\r\n\r\n    private readonly grid: Grid;\r\n\r\n    public static isGroupRow(row: GridRow): row is Group {\r\n        return row.isGroupRow;\r\n    }\r\n\r\n    public toggleExpand(): void {\r\n        this.grid.trigger(GridEventType.GroupToggleStarted, this);\r\n        this.setExpand(!this.collapsed());\r\n    }\r\n\r\n    public toggleSelected(data: any, event: JQuery.Event): boolean {\r\n        if (this.grid.selectionService.canSelectRows) {\r\n            this.grid.selectionService.changeSelection(this, event);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public flattenChildren(): Entity[] {\r\n        return flattenChildren(this);\r\n    }\r\n\r\n    private notifyChildren(): void {\r\n        const collapsed = this.collapsed();\r\n        const rowFactory = this.grid.rowFactory;\r\n        this.groupChildren.forEach(function (child): void {\r\n            rowFactory.setHidden(child.entity, collapsed);\r\n            if (collapsed) {\r\n                child.setExpand(collapsed);\r\n            }\r\n        });\r\n        this.children.forEach(function (child: Entity): void {\r\n            rowFactory.setHidden(child, collapsed);\r\n        });\r\n        rowFactory.rowCache = [];\r\n        rowFactory.renderedChange();\r\n    }\r\n\r\n    private readGroupClass(): string {\r\n        return this.collapsed()\r\n            ? 'kgGroupArrowCollapsed ' + configuration.css.groupCollapsedClass\r\n            : 'kgGroupArrowExpanded ' + configuration.css.groupExpandedClass;\r\n    }\r\n\r\n    private readFirstChild(): Entity | undefined {\r\n        if (this.children.length > 0) {\r\n            return this.children[0];\r\n        }\r\n\r\n        for (let i = 0; i < this.groupChildren.length; i++) {\r\n            const result = this.groupChildren[i].firstChild();\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private readIsFullySelected(): boolean {\r\n        return this.selectedChildren() === this.totalChildren();\r\n    }\r\n\r\n    private readIsSelected(): boolean {\r\n        return this.selectedChildren() > 0;\r\n    }\r\n\r\n    private readSelectedChildren(): number {\r\n        let result = 0;\r\n        this.groupChildren.forEach(function (groupChild): void {\r\n            result += groupChild.selectedChildren();\r\n        });\r\n\r\n        const selectionService = this.grid.selectionService;\r\n        this.children.forEach(function (child): void {\r\n            if (selectionService.isSelected(child)) {\r\n                result++;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private readTotalChildren(): number {\r\n        return totalChildren(this);\r\n    }\r\n\r\n    private setExpand(state: boolean): void {\r\n        this.collapsed(state);\r\n        this.notifyChildren();\r\n    }\r\n}\r\n\r\nfunction flattenChildren(group: Group): Entity[] {\r\n    let result = group.children;\r\n    group.groupChildren.forEach(function (groupChild): void {\r\n        result = result.concat(flattenChildren(groupChild));\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction totalChildren(group: Group): number {\r\n    let result = group.children.length;\r\n    group.groupChildren.forEach(function (groupChild): void {\r\n        result += totalChildren(groupChild);\r\n    });\r\n\r\n    return result;\r\n}\r\n","import ko, { Observable, PureComputed } from 'knockout';\r\nimport configuration from '../configuration';\r\nimport { Entity, GridRow, Maybe, Value } from '../types';\r\nimport SelectionService from './SelectionService';\r\n\r\nexport default class Row implements GridRow {\r\n    public constructor(entity: Entity, selectionService: SelectionService) {\r\n        this.canSelectRows = selectionService.canSelectRows;\r\n        this.entity = entity;\r\n        this.selectionService = selectionService;\r\n        this.isSelected = ko.pureComputed(this.readIsSelected, this);\r\n        this.rowIndex = ko.observable(0);\r\n        this.offsetTop = ko.observable('0px');\r\n        this.isGroupRow = false;\r\n        this.isEven = ko.pureComputed(this.readIsEven, this);\r\n        this.isOdd = ko.pureComputed(this.readIsOdd, this);\r\n        this.propertyCache = {};\r\n    }\r\n\r\n    public readonly canSelectRows: boolean;\r\n    public readonly entity: Entity;\r\n    public readonly isGroupRow: boolean;\r\n    public readonly isEven: PureComputed<boolean>;\r\n    public readonly isOdd: PureComputed<boolean>;\r\n    public readonly isSelected: PureComputed<boolean>;\r\n    public readonly offsetTop: Observable<string>;\r\n    public readonly rowIndex: Observable<number>;\r\n\r\n    private readonly propertyCache: { [key: string]: Maybe<Value> };\r\n    private readonly selectionService: SelectionService;\r\n\r\n    public getProperty(path: string): Maybe<Value> {\r\n        return (\r\n            this.propertyCache[path] ||\r\n            (this.propertyCache[path] = configuration.evalProperty(this.entity, path))\r\n        );\r\n    }\r\n\r\n    public toggleSelected(data: any, event: JQuery.Event): boolean {\r\n        if (this.canSelectRows) {\r\n            this.selectionService.changeSelection(this, event);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private readIsEven(): boolean {\r\n        return this.rowIndex() % 2 === 0;\r\n    }\r\n\r\n    private readIsOdd(): boolean {\r\n        return this.rowIndex() % 2 !== 0;\r\n    }\r\n\r\n    private readIsSelected(): boolean {\r\n        return this.selectionService.isSelected(this.entity);\r\n    }\r\n}\r\n","﻿import configuration from '../configuration';\r\nimport { EXCESS_ROWS } from '../constants';\r\nimport domUtilityService from '../domUtilityService';\r\nimport { Entity, GridRow, Maybe, Value } from '../types';\r\nimport utils from '../utils';\r\nimport Column, { ColumnConfig } from './Column';\r\nimport Grid from './Grid';\r\nimport Group, { GroupEntity } from './Group';\r\nimport Range from './Range';\r\nimport Row from './Row';\r\n\r\nconst isGroupEntity = Symbol('isGroupEntity');\r\n\r\ninterface EntityGroup {\r\n    column?: Column;\r\n    depth: number;\r\n    entities?: Entity[];\r\n    field?: string;\r\n    valueGroups: Map<Maybe<Value>, EntityGroup>;\r\n}\r\n\r\nexport default class RowFactory {\r\n    public constructor(grid: Grid) {\r\n        this.grid = grid;\r\n        this.groupCache = [];\r\n        this.groupedData = undefined;\r\n        this.numberOfGroups = 0;\r\n        this.parsedData = [];\r\n        this._renderedRange = new Range(0, grid.minRowsToRender() + EXCESS_ROWS);\r\n        // we cache rows when they are built, and then blow the cache away when sorting\r\n        this.rowCache = [];\r\n        this.hiddenEntities = new WeakSet();\r\n    }\r\n\r\n    public groupCache: Group[];\r\n    public rowCache: Row[];\r\n\r\n    private _renderedRange: Range;\r\n    private numberOfGroups: number;\r\n    private readonly grid: Grid;\r\n    private hiddenEntities: WeakSet<Entity>;\r\n    private groupedData?: EntityGroup;\r\n    private readonly parsedData: Entity[];\r\n\r\n    public get renderedRange(): Range {\r\n        return this._renderedRange;\r\n    }\r\n\r\n    public filteredDataChanged(): void {\r\n        const grid = this.grid;\r\n        const filteredData = grid.filteredData();\r\n        this.rowCache = rebuildRowCache(this.rowCache, filteredData, this._renderedRange);\r\n        const groups = grid.configGroups();\r\n        if (groups.length > 0) {\r\n            this.getGrouping(groups);\r\n        } else if (this.groupedData) {\r\n            this.clearGrouping();\r\n        }\r\n        this.updateViewableRange(this._renderedRange);\r\n    }\r\n\r\n    public isGroupEntity(entity: Entity): entity is GroupEntity {\r\n        return !!(entity as any)[isGroupEntity];\r\n    }\r\n\r\n    public renderedChange(): void {\r\n        if (!this.groupedData) {\r\n            this.renderedChangeNoGroups();\r\n            this.grid.refreshDomSizes();\r\n            return;\r\n        }\r\n        const dataArray = this.parsedData\r\n            .filter((e): boolean => !this.hiddenEntities.has(e))\r\n            .slice(this._renderedRange.topRow, this._renderedRange.bottomRow);\r\n        const rowArr = dataArray.map(\r\n            (item, indx): GridRow => {\r\n                let row: GridRow;\r\n                if (this.isGroupEntity(item)) {\r\n                    row = this.buildGroupRow(item, this._renderedRange.topRow + indx);\r\n                } else {\r\n                    row = this.buildEntityRow(item, this._renderedRange.topRow + indx);\r\n                }\r\n                return row;\r\n            }\r\n        );\r\n        this.grid.renderedRows(rowArr);\r\n        this.grid.refreshDomSizes();\r\n    }\r\n\r\n    public rowEntities(): Readonly<Entity[]> {\r\n        return this.groupedData ? this.parsedData : this.grid.filteredData();\r\n    }\r\n\r\n    public setHidden(entity: Entity, isHidden: boolean): void {\r\n        if (isHidden) {\r\n            this.hiddenEntities.add(entity);\r\n        } else {\r\n            this.hiddenEntities.delete(entity);\r\n        }\r\n    }\r\n\r\n    public updateViewableRange(newRange: Range): void {\r\n        this._renderedRange = newRange;\r\n        this.renderedChange();\r\n    }\r\n\r\n    public visibleRowCount(): number {\r\n        return this.groupedData\r\n            ? this.parsedData.filter((e): boolean => !this.hiddenEntities.has(e)).length\r\n            : this.grid.filteredData().length;\r\n    }\r\n\r\n    private buildGroupRow(groupEntity: GroupEntity, rowIndex: number): Group {\r\n        const grid = this.grid;\r\n        let group = this.groupCache[groupEntity.groupIndex]; // first check to see if we've already built it\r\n        if (!group) {\r\n            // build the row\r\n            group = new Group(groupEntity, grid);\r\n            this.groupCache[groupEntity.groupIndex] = group;\r\n        }\r\n        group.offsetTop((grid.rowHeight * rowIndex).toString() + 'px');\r\n        return group;\r\n    }\r\n\r\n    // Builds rows for each data item in the 'filteredData'\r\n    // @entity - the data item\r\n    // @rowIndex - the index of the row\r\n    private buildEntityRow(entity: Entity, rowIndex: number): Row {\r\n        const grid = this.grid;\r\n        let row = this.rowCache[rowIndex]; // first check to see if we've already built it\r\n        if (!row) {\r\n            // build the row\r\n            row = new Row(entity, grid.selectionService);\r\n            row.rowIndex(rowIndex + 1); //not a zero-based rowIndex\r\n            row.offsetTop((grid.rowHeight * rowIndex).toString() + 'px');\r\n            // finally cache it for the next round\r\n            this.rowCache[rowIndex] = row;\r\n        }\r\n        return row;\r\n    }\r\n\r\n    private clearGrouping(): void {\r\n        this.groupCache = [];\r\n        this.groupedData = undefined;\r\n        this.hiddenEntities = new WeakSet();\r\n        this.parsedData.length = 0;\r\n        this.numberOfGroups = 0;\r\n    }\r\n\r\n    //Shuffle the data into their respective groupings.\r\n    private getGrouping(groups: Column[]): void {\r\n        const grid = this.grid;\r\n        this.groupCache = [];\r\n        this.rowCache = [];\r\n        this.numberOfGroups = 0;\r\n        createGroupColumns(grid, groups);\r\n        this.groupedData = splitDataIntoGroups(grid, groups, this.hiddenEntities);\r\n        this.parsedData.length = 0;\r\n        this.parseGroupData(this.groupedData, []);\r\n        grid.aggregationService.refreshGroupAggregatesAsync();\r\n    }\r\n\r\n    //recurse through the groupData tree and create the appropriate row nodes. Row for leaf and Group for branches\r\n    private parseGroupData(group: EntityGroup, parentCache: Group[]): void {\r\n        if (group.entities) {\r\n            group.entities.forEach((item: Entity): void => {\r\n                // get the last parent in the array because that's where our children want to be\r\n                parentCache[parentCache.length - 1].children.push(item);\r\n                //add the row to our return array\r\n                this.parsedData.push(item);\r\n            });\r\n        } else {\r\n            group.valueGroups.forEach((value, key): void => {\r\n                //build the Group row\r\n                const groupEntity: GroupEntity = {\r\n                    [isGroupEntity]: true,\r\n                    column: group.column as Column,\r\n                    label: utils.hasValue(key) ? key.toString() : 'null',\r\n                    depth: group.depth,\r\n                    children: [],\r\n                    groupChildren: [],\r\n                    groupIndex: this.numberOfGroups,\r\n                };\r\n                let groupRow = this.buildGroupRow(groupEntity, 0);\r\n                this.numberOfGroups++;\r\n                //set the Group parent to the parent in the array that is one less deep.\r\n                groupRow.parent = parentCache[groupRow.depth - 1];\r\n                // if we have a parent, set the parent to not be collapsed and append the current group to its children\r\n                if (groupRow.parent) {\r\n                    groupRow.parent.collapsed(false);\r\n                    groupRow.parent.groupChildren.push(groupRow);\r\n                }\r\n                // add the Group row to the parsed data.\r\n                this.parsedData.push(groupRow.entity);\r\n                // the current Group now the parent of the current depth\r\n                parentCache[groupRow.depth] = groupRow;\r\n                // dig deeper for more Groups or children.\r\n                this.parseGroupData(value, parentCache);\r\n            });\r\n        }\r\n    }\r\n\r\n    private renderedChangeNoGroups(): void {\r\n        const rowArr: GridRow[] = [];\r\n        const dataArr = this.grid.filteredData.slice(\r\n            this._renderedRange.topRow,\r\n            this._renderedRange.bottomRow\r\n        );\r\n        dataArr.forEach((item, i): void => {\r\n            let row = this.buildEntityRow(item, this._renderedRange.topRow + i);\r\n            //add the row to our return array\r\n            rowArr.push(row);\r\n        });\r\n        this.grid.renderedRows(rowArr);\r\n    }\r\n}\r\n\r\n// Limiting to the rendered range is sufficient for preventing repaint of the current viewport\r\n// and also enforces an upper bound on the time complexity.\r\nfunction rebuildRowCache(rowCache: Row[], filteredData: Entity[], renderedRange: Range): Row[] {\r\n    const result: Row[] = [];\r\n\r\n    if (rowCache.length && filteredData.length) {\r\n        let length = Math.min(rowCache.length, renderedRange.bottomRow);\r\n        length = Math.min(length, filteredData.length);\r\n\r\n        for (let i = renderedRange.topRow; i < length; i++) {\r\n            const row = rowCache[i];\r\n            if (row) {\r\n                if (row.entity === filteredData[i]) {\r\n                    result[i] = row;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction createGroupColumns(grid: Grid, groups: Column[]): void {\r\n    const cols = grid.columns();\r\n    const maxDepth = groups.length;\r\n    const groupColOffset = grid.groupColOffset();\r\n    let hasAddedGroup = false;\r\n\r\n    groups.forEach(function (group, depth): void {\r\n        if (!cols[depth + groupColOffset].isGroupCol && depth <= maxDepth) {\r\n            const cellClass = depth > 1 ? 'kgGroupColumn--tail' : 'kgGroupColumn--head';\r\n            const columnConfig: ColumnConfig = {\r\n                colDef: {\r\n                    field: '',\r\n                    width: 25,\r\n                    sortable: false,\r\n                    resizable: false,\r\n                    headerCellTemplate: '<div class=\"kgGroupHeader\"></div>',\r\n                    visible: depth > 0,\r\n                    cellClass,\r\n                    headerClass: cellClass,\r\n                },\r\n                isGroupCol: true,\r\n                index: 0,\r\n            };\r\n            cols.splice(groupColOffset, 0, new Column(columnConfig, grid));\r\n            hasAddedGroup = true;\r\n        }\r\n    });\r\n\r\n    grid.fixColumnIndexes();\r\n    if (hasAddedGroup) {\r\n        grid.columns.valueHasMutated();\r\n    }\r\n    domUtilityService.buildStyles(grid);\r\n}\r\n\r\nfunction splitDataIntoGroups(\r\n    grid: Grid,\r\n    groups: Column[],\r\n    hiddenEntities: WeakSet<Entity>\r\n): EntityGroup {\r\n    const data = grid.filteredData();\r\n    const cols = grid.columns();\r\n    const evalPropertyForGroup = grid.config.evalPropertyForGroup;\r\n    const groupedData: EntityGroup = { depth: 0, valueGroups: new Map<string, EntityGroup>() };\r\n\r\n    data.forEach(function (item): void {\r\n        hiddenEntities.add(item);\r\n        let currentGroup = groupedData;\r\n        groups.forEach(function (group, depth): void {\r\n            const field = group.field;\r\n            const col = cols.find((c): boolean => c.field === field) as Column;\r\n\r\n            let val = evalPropertyForGroup\r\n                ? evalPropertyForGroup(item, col.colDef)\r\n                : configuration.evalProperty(item, field);\r\n            if (col.cellFilter) {\r\n                val = col.cellFilter(val);\r\n            }\r\n            val = utils.hasValue(val) ? val : undefined;\r\n\r\n            let childGroup = currentGroup.valueGroups.get(val);\r\n            if (!childGroup) {\r\n                childGroup = { depth: 0, valueGroups: new Map<string, EntityGroup>() };\r\n                currentGroup.valueGroups.set(val, childGroup);\r\n            }\r\n            if (!currentGroup.field) {\r\n                currentGroup.field = field;\r\n            }\r\n            if (!currentGroup.depth) {\r\n                currentGroup.depth = depth;\r\n            }\r\n            if (!currentGroup.column) {\r\n                currentGroup.column = col;\r\n            }\r\n\r\n            currentGroup = childGroup;\r\n        });\r\n        if (!currentGroup.entities) {\r\n            currentGroup.entities = [];\r\n        }\r\n        currentGroup.entities.push(item);\r\n    });\r\n\r\n    return groupedData;\r\n}\r\n","﻿import ko from 'knockout';\r\nimport Column from './Column';\r\nimport Grid from './Grid';\r\n\r\ninterface SearchCondition {\r\n    readonly column?: string;\r\n    readonly columnDisplay?: string;\r\n    readonly regex: RegExp;\r\n}\r\n\r\nexport default class SearchProvider {\r\n    public constructor(grid: Grid) {\r\n        this.grid = grid;\r\n        this.fieldMap = new Map();\r\n        this.searchConditions = [];\r\n        this.lastSearchStr = '';\r\n\r\n        const filterOptions = this.grid.config.filterOptions;\r\n        this.filterTextComputed = ko.computed(this.processFilterText, this);\r\n        if (filterOptions.filterThrottle != null) {\r\n            this.filterTextComputed.extend({ throttle: filterOptions.filterThrottle });\r\n        }\r\n\r\n        if (!filterOptions.useExternalFilter) {\r\n            this.grid.columns.subscribe(this.gridColumnsSubscription, this);\r\n        }\r\n    }\r\n\r\n    private readonly fieldMap: Map<string, string>;\r\n    private readonly filterTextComputed: ko.Computed<void>;\r\n    private readonly grid: Grid;\r\n\r\n    private lastSearchStr: string;\r\n    private searchConditions: SearchCondition[];\r\n\r\n    public evalFilter(): void {\r\n        if (this.searchConditions.length === 0) {\r\n            this.grid.filteredData(\r\n                this.grid.sortedData.peek().filter((item): boolean => {\r\n                    return item && !item._destroy;\r\n                })\r\n            );\r\n        } else {\r\n            this.grid.filteredData(\r\n                this.grid.sortedData.peek().filter((item): boolean => {\r\n                    if (!item || item._destroy) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (let i = 0, len = this.searchConditions.length; i < len; i++) {\r\n                        const condition = this.searchConditions[i];\r\n                        //Search entire row\r\n                        if (!condition.column) {\r\n                            for (let prop in item) {\r\n                                if (item.hasOwnProperty(prop)) {\r\n                                    const pVal = ko.unwrap(item[prop]);\r\n                                    if (pVal && condition.regex.test(pVal.toString())) {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return false;\r\n                        }\r\n                        //Search by column.\r\n                        let field = ko.unwrap(item[condition.column]);\r\n                        if (!field && condition.columnDisplay) {\r\n                            const column = this.fieldMap.get(condition.columnDisplay);\r\n                            field = column && ko.unwrap(item[column]);\r\n                        }\r\n                        if (!field || !condition.regex.test(field.toString())) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                })\r\n            );\r\n        }\r\n        this.grid.rowFactory.filteredDataChanged();\r\n    }\r\n\r\n    private processFilterText(): void {\r\n        if (!this.grid.config.filterOptions.useExternalFilter) {\r\n            const filterText = this.grid.filterText().trim();\r\n            if (filterText !== this.lastSearchStr) {\r\n                //To prevent circular dependency when throttle is enabled.\r\n                this.lastSearchStr = filterText;\r\n                this.buildSearchConditions(filterText);\r\n                this.evalFilter();\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildSearchConditions(filterText: string): void {\r\n        //reset.\r\n        this.searchConditions = [];\r\n        if (!filterText) {\r\n            return;\r\n        }\r\n        const columnFilters = filterText.split(';');\r\n        columnFilters.forEach((filter): void => {\r\n            const args = filter.split(':');\r\n            if (args.length > 1) {\r\n                const columnName = args[0].trim();\r\n                const columnValue = args[1].trim();\r\n                if (columnName && columnValue) {\r\n                    this.searchConditions.push({\r\n                        column: columnName,\r\n                        columnDisplay: columnName.replace(/\\s+/g, '').toLowerCase(),\r\n                        regex: getRegExp(columnValue, 'i'),\r\n                    });\r\n                }\r\n            } else {\r\n                const val = args[0].trim();\r\n                if (val) {\r\n                    this.searchConditions.push({ regex: getRegExp(val, 'i') });\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    private gridColumnsSubscription(columns: Column[]): void {\r\n        columns.forEach((col): void => {\r\n            this.fieldMap.set(col.displayName().toLowerCase().replace(/\\s+/g, ''), col.field);\r\n        });\r\n    }\r\n}\r\n\r\nfunction getRegExp(str: string, modifiers: string): RegExp {\r\n    try {\r\n        return new RegExp(str, modifiers);\r\n    } catch {\r\n        //Escape all RegExp metacharacters.\r\n        return new RegExp(str.replace(/(\\^|\\$|\\(|\\)|<|>|\\[|\\]|\\{|\\}|\\\\|\\||\\.|\\*|\\+|\\?)/g, '\\\\$1'));\r\n    }\r\n}\r\n","import ko from 'knockout';\r\nimport { Entity, GridRow } from '../types';\r\nimport Grid from './Grid';\r\nimport Group from './Group';\r\n\r\nexport default class SelectionService {\r\n    public constructor(grid: Grid) {\r\n        this.grid = grid;\r\n        this._lastClickedRow = undefined;\r\n        this.selectedItemSet = ko.pureComputed(this.readSelectedItemSet, this);\r\n    }\r\n\r\n    private readonly grid: Grid;\r\n    private readonly selectedItemSet: ko.PureComputed<Set<Entity>>;\r\n    private _lastClickedRow?: GridRow;\r\n\r\n    public get canSelectRows(): boolean {\r\n        return this.grid.config.canSelectRows;\r\n    }\r\n\r\n    public get lastClickedRow(): GridRow | undefined {\r\n        return this._lastClickedRow;\r\n    }\r\n\r\n    // function to manage the selection action of a data item (entity)\r\n    public changeSelection(row: GridRow, evt: JQuery.Event): void {\r\n        if (this.grid.multiSelect) {\r\n            this.changeSelectionMulti(row, evt);\r\n        } else {\r\n            this.changeSelectionSingle(row, evt);\r\n        }\r\n        this._lastClickedRow = row;\r\n    }\r\n\r\n    public isSelected(entity: Entity): boolean {\r\n        return this.selectedItemSet().has(entity);\r\n    }\r\n\r\n    public selectRange(startRow: GridRow, endRow: GridRow, keepLastSelected?: boolean): boolean {\r\n        const grid = this.grid;\r\n        const rowFactory = grid.rowFactory;\r\n        const rowEntities = rowFactory.rowEntities();\r\n        let startIndex = rowEntities.indexOf(startRow.entity);\r\n        let endIndex = rowEntities.indexOf(endRow.entity);\r\n        if (endIndex !== -1) {\r\n            this._lastClickedRow = endRow;\r\n        }\r\n        if (startIndex === -1 || endIndex === -1) {\r\n            return false;\r\n        }\r\n\r\n        if (endIndex < startIndex) {\r\n            const tempIndex = startIndex;\r\n            const tempRow = startRow;\r\n            startIndex = endIndex;\r\n            startRow = endRow;\r\n            endIndex = tempIndex;\r\n            endRow = tempRow;\r\n        }\r\n\r\n        if (Group.isGroupRow(endRow)) {\r\n            endIndex += rowCount(endRow);\r\n        }\r\n\r\n        const selectedItems = keepLastSelected ? grid.selectedItems() : [];\r\n        const selectedItemSet = keepLastSelected ? this.selectedItemSet() : undefined;\r\n        for (; startIndex <= endIndex; startIndex++) {\r\n            const entity = rowEntities[startIndex];\r\n            if (\r\n                !rowFactory.isGroupEntity(entity) &&\r\n                (!selectedItemSet || !selectedItemSet.has(entity))\r\n            ) {\r\n                selectedItems.push(entity);\r\n            }\r\n        }\r\n\r\n        grid.selectedItems(selectedItems);\r\n        return true;\r\n    }\r\n\r\n    private changeSelectionMulti(row: GridRow, evt: JQuery.Event): void {\r\n        if (evt.shiftKey) {\r\n            const startRow = this._lastClickedRow;\r\n            if ((!startRow || !this.selectRange(startRow, row, true)) && !isFullySelected(row)) {\r\n                this.select(row, true);\r\n            }\r\n        } else if (evt.ctrlKey && !isArrowKeyUpDown(evt)) {\r\n            this.select(row, !row.isSelected());\r\n        } else {\r\n            this.selectOnly(row);\r\n        }\r\n    }\r\n\r\n    private changeSelectionSingle(row: GridRow, evt: JQuery.Event): void {\r\n        if (evt.ctrlKey && !isArrowKeyUpDown(evt) && row.isSelected()) {\r\n            this.select(row, false);\r\n        } else if (!row.isGroupRow) {\r\n            this.selectOnly(row);\r\n        }\r\n    }\r\n\r\n    private select(row: GridRow, isSelected: boolean): void {\r\n        const entities = flattenEntities(row);\r\n        const selectedItemSet = this.selectedItemSet();\r\n        let selectedItems = this.grid.selectedItems();\r\n\r\n        if (isSelected) {\r\n            entities.forEach(function (entity): void {\r\n                if (!selectedItemSet.has(entity)) {\r\n                    selectedItems.push(entity);\r\n                }\r\n            });\r\n        } else if (entities.length === 1) {\r\n            const index = selectedItems.indexOf(entities[0]);\r\n            selectedItems.splice(index, 1);\r\n        } else {\r\n            const entitySet = new Set(entities);\r\n            selectedItems = selectedItems.filter((x): boolean => !entitySet.has(x));\r\n        }\r\n\r\n        this.grid.selectedItems(selectedItems);\r\n    }\r\n\r\n    private selectOnly(row: GridRow): void {\r\n        const selectedItems = this.grid.selectedItems;\r\n        if (\r\n            !isFullySelected(row) ||\r\n            selectedItems().length !== (Group.isGroupRow(row) ? row.selectedChildren() : 1)\r\n        ) {\r\n            selectedItems(flattenEntities(row));\r\n        }\r\n    }\r\n\r\n    private readSelectedItemSet(): Set<Entity> {\r\n        return new Set(this.grid.selectedItems());\r\n    }\r\n}\r\n\r\nfunction flattenEntities(row: GridRow): Entity[] {\r\n    if (Group.isGroupRow(row)) {\r\n        const entities: Entity[] = [];\r\n        addGroupEntities(row, entities);\r\n        return entities;\r\n    } else {\r\n        return [row.entity];\r\n    }\r\n}\r\n\r\nfunction addGroupEntities(group: Group, entities: Entity[]): void {\r\n    group.groupChildren.forEach(function (groupChild): void {\r\n        addGroupEntities(groupChild, entities);\r\n    });\r\n    group.children.forEach(function (entity): void {\r\n        entities.push(entity);\r\n    });\r\n}\r\n\r\nfunction isArrowKeyUpDown(evt: JQuery.Event): boolean {\r\n    return evt.keyCode === 38 || evt.keyCode === 40;\r\n}\r\n\r\nfunction isFullySelected(row: GridRow): boolean {\r\n    return Group.isGroupRow(row) ? row.isFullySelected() : row.isSelected();\r\n}\r\n\r\nfunction rowCount(group: Group): number {\r\n    let result = group.groupChildren.length + group.children.length;\r\n    group.groupChildren.forEach(function (groupChild): void {\r\n        result += rowCount(groupChild);\r\n    });\r\n\r\n    return result;\r\n}\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport configuration from '../configuration';\r\nimport { EXCESS_ROWS, GridEventType, SCROLL_THRESHOLD, SortDirection } from '../constants';\r\nimport domUtilityService from '../domUtilityService';\r\nimport sortService, { SortInfo } from '../sortService';\r\nimport styleProvider, { SizeStyle } from '../styleProvider';\r\nimport templates from '../templates/templates';\r\nimport { Entity, GridRow, Maybe, PropertyBag, Value } from '../types';\r\nimport utils from '../utils';\r\nimport { AggregationService } from './AggregationService';\r\nimport Column, { ColumnDefinition } from './Column';\r\nimport { AggregationResult, DefaultAggregationProvider } from './DefaultAggregationProvider';\r\nimport Dimension from './Dimension';\r\nimport EventProvider from './EventProvider';\r\nimport {\r\n    getGridConfig,\r\n    getPagingOptions,\r\n    GridConfig,\r\n    GridEventHandler,\r\n    GridEventMap,\r\n    GridOptions,\r\n    GridSettings,\r\n    GroupInfo,\r\n    PagingOptions\r\n} from './grid-config';\r\nimport MessageBus from './MessageBus';\r\nimport Range from './Range';\r\nimport RowFactory from './RowFactory';\r\nimport SearchProvider from './SearchProvider';\r\nimport SelectionService from './SelectionService';\r\n\r\nexport default class Grid {\r\n    private constructor(options: GridOptions) {\r\n        const config = getGridConfig(options);\r\n        this.config = config;\r\n        this.gridId = 'ng' + utils.newId();\r\n        this.$userViewModel = options.userViewModel;\r\n\r\n        const gridContainers = options.gridContainers;\r\n        this.$root = gridContainers.$root; //this is the root element that is passed in with the binding handler\r\n        this.$topPanel = gridContainers.$topPanel;\r\n        this.$groupPanel = gridContainers.$groupPanel;\r\n        this.$headerContainer = gridContainers.$headerContainer;\r\n        this.$headerScroller = gridContainers.$headerScroller;\r\n        this.$fixedHeaderContainer = gridContainers.$fixedHeaderContainer;\r\n        this.$fixedHeaderScroller = gridContainers.$fixedHeaderScroller;\r\n        this.$viewport = gridContainers.$viewport;\r\n        this.$canvas = gridContainers.$canvas;\r\n        this.$fixedViewport = gridContainers.$fixedViewport;\r\n        this.$fixedCanvas = gridContainers.$fixedCanvas;\r\n\r\n        this.legacyMode = options.legacyMode;\r\n\r\n        this.prevScrollTop = 0;\r\n        this.prevScrollIndex = 0;\r\n        this.rootDim = options.gridDim;\r\n        this.jqueryUITheme = !!options.jqueryUITheme;\r\n        this.footerVisible = options.footerVisible !== false;\r\n        this.viewportDimHeight = ko.pureComputed(this.readViewportDimHeight, this);\r\n        this.viewportDimWidth = ko.pureComputed(this.readViewportDimWidth, this);\r\n        this.fixedViewportDimWidth = ko.pureComputed(this.totalFixedRowWidth, this);\r\n\r\n        this.maxCanvasHt = ko.observable(0);\r\n\r\n        this.sortInfos = ko.observable(options.sortInfos || []);\r\n        this.sortedData = options.data;\r\n\r\n        this.showFilter = options.showFilter !== false;\r\n        this.filteredData = ko.observableArray();\r\n        this.filterText =\r\n            (options.filterOptions && options.filterOptions.filterText) || ko.observable('');\r\n        this.totalFilteredItemsLength = ko.pureComputed(this.readTotalFilteredItemsLength, this);\r\n\r\n        this.columns = ko.observableArray();\r\n        this.visibleNonFixedColumns = ko.pureComputed(this.readVisibleNonFixedColumns, this);\r\n        this.visibleFixedColumns = ko.pureComputed(this.readVisibleFixedColumns, this);\r\n        this.nonGroupColumns = ko.pureComputed(this.readNonGroupColumns, this);\r\n        this.maintainColumnRatios = options.maintainColumnRatios !== false;\r\n        this.hasRatioColumn = false;\r\n\r\n        this.rowHeight = options.rowHeight || 30;\r\n        this.rowTemplate = options.rowTemplate || templates.defaultRowTemplate();\r\n        this.groupRowTemplate = options.groupRowTemplate || templates.defaultGroupRowTemplate();\r\n        this.fixedRowTemplate = options.fixedRowTemplate || templates.defaultFixedRowTemplate();\r\n        this.headerRowTemplate = options.headerRowTemplate || templates.defaultHeaderRowTemplate();\r\n        this.fixedHeaderRowTemplate =\r\n            options.fixedHeaderRowTemplate || templates.defaultFixedHeaderRowTemplate();\r\n        this.renderedRows = ko.observableArray();\r\n\r\n        this.disableTextSelection = options.disableTextSelection !== false;\r\n        this.multiSelect = config.canSelectRows && options.multiSelect !== false;\r\n        this.selectedItems = options.selectedItems || ko.observableArray();\r\n        this.selectedItemCount = ko.pureComputed(this.readSelectedItemCount, this);\r\n\r\n        this.showMenu = ko.observable<boolean>(false);\r\n        this.showColumnMenu = options.showColumnMenu !== false;\r\n        this.enableGrouping = !!options.enableGrouping;\r\n        this.topPanelHeight = this.enableGrouping\r\n            ? config.headerRowHeight * 2\r\n            : config.headerRowHeight;\r\n        this.configGroups = ko.observableArray();\r\n        this.ensureCanGroupData =\r\n            options.ensureCanGroupData || ((): boolean => this.enableGrouping);\r\n        this.groupPanelText = ko.pureComputed(this.readGroupPanelText, this);\r\n        this.isDraggingOverGroups = ko.observable<boolean>(false);\r\n\r\n        this.aggregateResults = ko.observableArray();\r\n        this.enablePaging = !!options.enablePaging;\r\n        this.pagingOptions = getPagingOptions(options);\r\n        this.maxRows = ko.pureComputed(this.readMaxRows, this);\r\n        this.maxPages = ko.pureComputed(this.readMaxPages, this);\r\n        this.cantPageForward = ko.pureComputed(this.readCantPageForward, this);\r\n        this.cantPageBackward = ko.pureComputed(this.readCantPageBackward, this);\r\n\r\n        const styles = styleProvider(this);\r\n        this.canvasStyle = styles.canvasStyle;\r\n        this.footerStyle = styles.footerStyle;\r\n        this.headerScrollerStyle = styles.headerScrollerStyle;\r\n        this.headerStyle = styles.headerStyle;\r\n        this.fixedHeaderStyle = styles.fixedHeaderStyle;\r\n        this.topPanelStyle = styles.topPanelStyle;\r\n        this.viewportPanelStyle = styles.viewportPanelStyle;\r\n        this.viewportStyle = styles.viewportStyle;\r\n        this.fixedViewportStyle = styles.fixedViewportStyle;\r\n        this.groupPanelStyle = styles.groupPanelStyle;\r\n\r\n        this.messageBus = new MessageBus();\r\n        this.selectionService = new SelectionService(this);\r\n        this.rowFactory = new RowFactory(this);\r\n        this.searchProvider = new SearchProvider(this);\r\n        this.aggregationService = new AggregationService(\r\n            this,\r\n            options.aggregationProvider ||\r\n                new DefaultAggregationProvider(\r\n                    (): Entity[] => this.sortedData(),\r\n                    (entity: Entity, path: string): Promise<Maybe<Value>> =>\r\n                        Promise.resolve(utils.evalProperty(entity, path))\r\n                )\r\n        );\r\n\r\n        this.hoveredEntity = ko.observable();\r\n    }\r\n\r\n    public readonly $canvas: JQuery;\r\n    public readonly $fixedCanvas: JQuery;\r\n    public readonly $fixedHeaderContainer: JQuery;\r\n    public readonly $fixedHeaderScroller: JQuery;\r\n    public readonly $fixedViewport: JQuery;\r\n    public readonly $groupPanel: JQuery;\r\n    public readonly $headerContainer: JQuery;\r\n    public readonly $headerScroller: JQuery;\r\n    public readonly $root: JQuery;\r\n    public readonly $topPanel: JQuery;\r\n    public readonly $viewport: JQuery;\r\n    public readonly $userViewModel: PropertyBag;\r\n    public readonly cantPageBackward: ko.PureComputed<boolean>;\r\n    public readonly cantPageForward: ko.PureComputed<boolean>;\r\n    public readonly canvasStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly columns: ko.ObservableArray<Column>;\r\n    public readonly config: GridConfig;\r\n    public readonly configGroups: ko.ObservableArray<Column>;\r\n    public readonly aggregateResults: ko.ObservableArray<AggregationResult>;\r\n    public readonly aggregationService: AggregationService;\r\n    public readonly disableTextSelection: boolean;\r\n    public readonly enableGrouping: boolean;\r\n    public readonly enablePaging: boolean;\r\n    public readonly filteredData: ko.ObservableArray<Entity>;\r\n    public readonly filterText: ko.Observable<string>;\r\n    public readonly fixedHeaderRowTemplate: string;\r\n    public readonly fixedHeaderStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly fixedRowTemplate: string;\r\n    public readonly fixedViewportDimWidth: ko.PureComputed<number>;\r\n    public readonly fixedViewportStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly footerStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly footerVisible: boolean;\r\n    public readonly gridId: string;\r\n    public readonly groupPanelStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly groupPanelText: ko.PureComputed<string>;\r\n    public readonly groupRowTemplate: string;\r\n    public readonly headerRowTemplate: string;\r\n    public readonly headerScrollerStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly headerStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly hoveredEntity: ko.Observable<Entity | undefined>;\r\n    public readonly isDraggingOverGroups: ko.Observable<boolean>;\r\n    public readonly jqueryUITheme: boolean;\r\n    public readonly legacyMode: boolean;\r\n    public readonly maxCanvasHt: ko.Observable<number>;\r\n    public readonly maxRows: ko.PureComputed<number>;\r\n    public readonly multiSelect: boolean;\r\n    public readonly nonGroupColumns: ko.PureComputed<Readonly<Column[]>>;\r\n    public readonly pagingOptions: PagingOptions;\r\n    public readonly renderedRows: ko.ObservableArray<Readonly<GridRow>>;\r\n    public readonly rootDim: Dimension;\r\n    public readonly rowFactory: RowFactory;\r\n    public readonly rowHeight: number;\r\n    public readonly rowTemplate: string;\r\n    public readonly searchProvider: SearchProvider;\r\n    public readonly selectedItemCount: ko.PureComputed<number>;\r\n    public readonly selectedItems: ko.ObservableArray<Entity>;\r\n    public readonly selectionService: SelectionService;\r\n    public readonly showColumnMenu: boolean;\r\n    public readonly showFilter: boolean;\r\n    public readonly showMenu: ko.Observable<boolean>;\r\n    public readonly sortedData: ko.ObservableArray<Entity>;\r\n    public readonly topPanelHeight: number;\r\n    public readonly topPanelStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly totalFilteredItemsLength: ko.PureComputed<number>;\r\n    public readonly viewportDimHeight: ko.PureComputed<number>;\r\n    public readonly viewportDimWidth: ko.PureComputed<number>;\r\n    public readonly viewportPanelStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly viewportStyle: ko.PureComputed<SizeStyle>;\r\n    public readonly visibleFixedColumns: ko.PureComputed<Readonly<Column[]>>;\r\n    public readonly visibleNonFixedColumns: ko.PureComputed<Readonly<Column[]>>;\r\n\r\n    public eventProvider?: EventProvider;\r\n    public styleSheet: HTMLStyleElement | undefined;\r\n\r\n    private readonly ensureCanGroupData: () => boolean;\r\n    private readonly maintainColumnRatios: boolean;\r\n    private readonly maxPages: ko.PureComputed<number>;\r\n    private readonly messageBus: MessageBus;\r\n    private readonly sortInfos: ko.Observable<SortInfo[]>;\r\n\r\n    private hasRatioColumn: boolean;\r\n    private prevScrollIndex: number;\r\n    private prevScrollTop: number;\r\n\r\n    public static init(options: GridOptions): Grid {\r\n        const grid = new Grid(options);\r\n        grid.buildColumns(options.columnDefs, options.groupInfos, options.sortInfos);\r\n        grid.configGroups.subscribe(grid.onConfigGroupsChanged, grid);\r\n        grid.sortInfos.subscribe(grid.onSortInfosChanged, grid);\r\n        grid.filteredData.subscribe(grid.onFilteredDataChanged, grid);\r\n        grid.searchProvider.evalFilter();\r\n        grid.aggregationService.overrideAggregateInfosAsync(options.aggregateInfos || []);\r\n\r\n        return grid;\r\n    }\r\n\r\n    public adjustScrollLeft(scrollLeft: number): void {\r\n        this.$headerScroller.css('margin-left', -scrollLeft);\r\n    }\r\n\r\n    public adjustScrollTop(scrollTop: number, force?: boolean): void {\r\n        if (!force && this.prevScrollTop === scrollTop) {\r\n            return;\r\n        }\r\n        const rowIndex = Math.floor(scrollTop / this.rowHeight);\r\n        // Have we hit the threshold going down?\r\n        if (\r\n            !force &&\r\n            this.prevScrollTop < scrollTop &&\r\n            rowIndex < this.prevScrollIndex + SCROLL_THRESHOLD\r\n        ) {\r\n            return;\r\n        }\r\n        //Have we hit the threshold going up?\r\n        if (\r\n            !force &&\r\n            this.prevScrollTop > scrollTop &&\r\n            rowIndex > this.prevScrollIndex - SCROLL_THRESHOLD\r\n        ) {\r\n            return;\r\n        }\r\n        this.prevScrollTop = scrollTop;\r\n        const oldRange = this.rowFactory.renderedRange;\r\n        const newRange = new Range(\r\n            Math.max(0, rowIndex - EXCESS_ROWS),\r\n            rowIndex + this.minRowsToRender() + EXCESS_ROWS\r\n        );\r\n        if (newRange.topRow < oldRange.topRow || newRange.bottomRow > oldRange.bottomRow) {\r\n            this.rowFactory.updateViewableRange(newRange);\r\n        }\r\n        this.prevScrollIndex = rowIndex;\r\n    }\r\n\r\n    public adjustFixedViewportScrollTop(): void {\r\n        if (!this.legacyMode) {\r\n            return;\r\n        }\r\n        const viewportScrollTop = this.$viewport.scrollTop() || 0;\r\n        const viewportHeight = this.$viewport.height() || 0;\r\n        const scrollDiff = viewportScrollTop - (this.$fixedViewport.scrollTop() || 0);\r\n        this.$fixedCanvas.css('margin-bottom', viewportHeight + scrollDiff);\r\n        this.$fixedViewport.scrollTop(viewportScrollTop);\r\n    }\r\n\r\n    public groupColOffset(): number {\r\n        return this.columns().findIndex((x): boolean => !x.fixed);\r\n    }\r\n\r\n    private buildColumns(\r\n        columnDefs: ColumnDefinition[] | undefined,\r\n        groupInfos: GroupInfo[] | undefined,\r\n        sortInfos: SortInfo[] | undefined\r\n    ): void {\r\n        const columns: Column[] = [];\r\n        const configGroups: Column[] = [];\r\n\r\n        if (columnDefs && columnDefs.length > 0) {\r\n            const sortInfoMap = getSortInfoMap(sortInfos ?? this.sortInfos());\r\n            const sortCallback = this.sortData.bind(this);\r\n            const resizeOnDataCallback = this.resizeOnData.bind(this);\r\n            const columnMap =\r\n                groupInfos && groupInfos.length && this.ensureCanGroupData()\r\n                    ? new Map<string, Column>()\r\n                    : undefined;\r\n\r\n            columnDefs\r\n                .sort((a, b): number => (a.fixed ? 0 : 1) - (b.fixed ? 0 : 1))\r\n                .forEach((colDef, i): void => {\r\n                    const column = new Column(\r\n                        {\r\n                            colDef: colDef,\r\n                            index: i,\r\n                            sortCallback: sortCallback,\r\n                            resizeOnDataCallback: resizeOnDataCallback,\r\n                            enableResize: this.config.enableColumnResize,\r\n                            enableSort: this.config.enableSorting,\r\n                        },\r\n                        this\r\n                    );\r\n\r\n                    columns.push(column);\r\n                    if (columnMap) {\r\n                        columnMap.set(colDef.field, column);\r\n                    }\r\n\r\n                    const sortDirection = sortInfoMap.get(colDef.field);\r\n                    if (sortDirection) {\r\n                        column.sortDirection(sortDirection);\r\n                    }\r\n                });\r\n\r\n            if (columnMap) {\r\n                (groupInfos as GroupInfo[]).forEach(function (info): void {\r\n                    const column = columnMap.get(info.field);\r\n                    if (column) {\r\n                        column.groupIndex(configGroups.length);\r\n                        configGroups.push(column);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        this.columns(columns);\r\n        if (configGroups.length || this.configGroups().length) {\r\n            this.configGroups(configGroups);\r\n        }\r\n    }\r\n\r\n    public configureColumnWidths(): void {\r\n        const asterisks: { index: number; value: number }[] = [];\r\n        const percents: { index: number; value: number }[] = [];\r\n        const columns = this.columns();\r\n        let asteriskNum = 0;\r\n        let totalWidth = 0;\r\n\r\n        columns.forEach(function (col, i): void {\r\n            let width = col.colDef.width;\r\n            if (width == null) {\r\n                col.colDef.width = width = '*';\r\n            }\r\n\r\n            // check if it is a number\r\n            if (typeof width === 'string') {\r\n                // figure out if the width is defined or if we need to calculate it\r\n                if (width[0] === '*') {\r\n                    asteriskNum += width.length;\r\n                    asterisks.push({ index: i, value: width.length });\r\n                } else if (width.endsWith('%')) {\r\n                    // If the width is a percentage, save it until the very last.\r\n                    percents.push({ index: i, value: parseInt(width.slice(0, -1), 10) / 100 });\r\n                } else {\r\n                    // we can't parse the width so lets throw an error.\r\n                    throw new Error(\r\n                        'unable to parse column width, use percentage (\"10%\",\"20%\", etc...) or \"*\" to use remaining width of grid'\r\n                    );\r\n                }\r\n            } else {\r\n                totalWidth += col.width = width;\r\n            }\r\n        });\r\n\r\n        // check if we saved any asterisk columns for calculating later\r\n        if (asterisks.length > 0) {\r\n            // get the remaining width\r\n            const remainingWidth = this.rootDim.outerWidth() - totalWidth;\r\n            // calculate the weight of each asterisk rounded down\r\n            const asteriskVal = Math.floor(remainingWidth / asteriskNum);\r\n            // set the width of each column based on the number of stars\r\n            const isOverflowing = this.maxCanvasHt() > this.viewportDimHeight();\r\n            asterisks.forEach(function (asterisk): void {\r\n                const col = columns[asterisk.index];\r\n                col.width = asteriskVal * asterisk.value;\r\n                //check if we are on the last column\r\n                if (asterisk.index + 1 === columns.length) {\r\n                    let offset = 2; //We're going to remove 2 px so we won't overflow the viewport by default\r\n                    if (isOverflowing) {\r\n                        //compensate for scrollbar\r\n                        offset += domUtilityService.scrollW;\r\n                    }\r\n                    col.width -= offset;\r\n                }\r\n                totalWidth += col.width;\r\n            });\r\n        }\r\n\r\n        // Now we check if we saved any percentage columns for calculating last\r\n        if (percents.length > 0) {\r\n            // do the math\r\n            const outerWidth = this.rootDim.outerWidth();\r\n            percents.forEach(function (col): void {\r\n                columns[col.index].width = Math.floor(outerWidth * col.value);\r\n            });\r\n        }\r\n\r\n        this.columns(columns);\r\n        this.hasRatioColumn = asterisks.length > 0;\r\n        domUtilityService.buildStyles(this);\r\n    }\r\n\r\n    public fixColumnIndexes(): void {\r\n        this.columns.peek().forEach(function (col, i): void {\r\n            col.index = i;\r\n        });\r\n    }\r\n\r\n    public fixGroupIndexes(): void {\r\n        this.configGroups().forEach(function (item, i): void {\r\n            item.groupIndex(i);\r\n        });\r\n    }\r\n\r\n    public groupBy(col: Column, groupIndex?: number): void {\r\n        if (this.ensureCanGroupData()) {\r\n            const configGroups = this.configGroups();\r\n            const targetIndex = groupIndex !== undefined ? groupIndex : configGroups.length;\r\n            this.configGroups.splice(targetIndex, 0, col);\r\n            if (targetIndex < configGroups.length - 1) {\r\n                this.fixGroupIndexes();\r\n            } else {\r\n                col.groupIndex(targetIndex);\r\n            }\r\n            this.trigger(GridEventType.SettingsChangedByUser, { groupInfos: configGroups });\r\n        }\r\n    }\r\n\r\n    public isHoveredEntity(entity: Entity): boolean {\r\n        return this.legacyMode && entity === this.hoveredEntity();\r\n    }\r\n\r\n    public minRowsToRender(): number {\r\n        const viewportH = this.viewportDimHeight() || 1;\r\n        return Math.floor(viewportH / this.rowHeight);\r\n    }\r\n\r\n    public off(gridEventType: GridEventType, handler: GridEventHandler<any>): void {\r\n        this.messageBus.unsubscribe(gridEventType, handler);\r\n    }\r\n\r\n    public on<T extends keyof GridEventMap>(\r\n        gridEventType: T,\r\n        handler: GridEventHandler<GridEventMap[T]>\r\n    ): void {\r\n        this.messageBus.subscribe(gridEventType, handler);\r\n    }\r\n\r\n    public overrideSettings(gridSettings: GridSettings, shouldTriggerEvent: boolean): void {\r\n        if (gridSettings.columnDefs) {\r\n            this.overrideColumnDefs(gridSettings.columnDefs, gridSettings.groupInfos, gridSettings.sortInfos);\r\n        } else if (gridSettings.groupInfos) {\r\n            this.overrideGroupInfos(gridSettings.groupInfos);\r\n        }\r\n\r\n        if (gridSettings.aggregateInfos) {\r\n            this.aggregationService.overrideAggregateInfosAsync(gridSettings.aggregateInfos);\r\n        }\r\n\r\n        if (gridSettings.sortInfos) {\r\n            this.overrideSortInfos(gridSettings.sortInfos);\r\n        }\r\n\r\n        if (shouldTriggerEvent) {\r\n            this.trigger(GridEventType.SettingsChangedByUser, gridSettings);\r\n        }\r\n    }\r\n\r\n    public pageBackward(): void {\r\n        const page = this.pagingOptions.currentPage();\r\n        this.pagingOptions.currentPage(Math.max(page - 1, 1));\r\n    }\r\n\r\n    public pageForward(): void {\r\n        const page = this.pagingOptions.currentPage();\r\n        this.pagingOptions.currentPage(Math.min(page + 1, this.maxPages()));\r\n    }\r\n\r\n    public pageToFirst(): void {\r\n        this.pagingOptions.currentPage(1);\r\n    }\r\n\r\n    public pageToLast(): void {\r\n        const maxPages = this.maxPages();\r\n        this.pagingOptions.currentPage(maxPages);\r\n    }\r\n\r\n    public refreshDomSizes(rootDim?: { width: number; height: number }): void {\r\n        if (rootDim) {\r\n            this.rootDim.outerWidth(rootDim.width);\r\n            this.rootDim.outerHeight(rootDim.height);\r\n        }\r\n        this.maxCanvasHt(this.calcMaxCanvasHeight());\r\n    }\r\n\r\n    public removeGroup(index: number): void {\r\n        const columns = this.columns();\r\n        const column = columns.find((x): boolean => x.groupIndex() === index);\r\n        if (!column) {\r\n            return;\r\n        }\r\n\r\n        column.groupIndex(-1);\r\n        this.columns.splice(this.groupColOffset(), 1);\r\n        this.configGroups.splice(index, 1);\r\n        this.fixGroupIndexes();\r\n        this.trigger(GridEventType.SettingsChangedByUser, { groupInfos: this.configGroups() });\r\n\r\n        if (this.configGroups().length === 0) {\r\n            this.fixColumnIndexes();\r\n        }\r\n\r\n        domUtilityService.buildStyles(this);\r\n    }\r\n\r\n    public settings(): GridSettings {\r\n        return {\r\n            columnDefs: this.columns()\r\n                .filter((x): boolean => !x.isGroupCol)\r\n                .map((x): ColumnDefinition => x.colDef),\r\n            groupInfos: this.configGroups(),\r\n            sortInfos: this.sortInfos(),\r\n            aggregateInfos: this.aggregationService.aggregateConfig,\r\n        };\r\n    }\r\n\r\n    public shouldMaintainColumnRatios(): boolean {\r\n        return this.hasRatioColumn && this.maintainColumnRatios;\r\n    }\r\n\r\n    public toggleGroup(col: Column): void {\r\n        const colIndex = this.configGroups().indexOf(col);\r\n        if (colIndex === -1) {\r\n            this.groupBy(col);\r\n        } else {\r\n            this.removeGroup(colIndex);\r\n        }\r\n    }\r\n\r\n    public toggleShowMenu(): void {\r\n        this.showMenu(!this.showMenu());\r\n    }\r\n\r\n    public trigger<T extends keyof GridEventMap>(gridEventType: T, data: GridEventMap[T]): void {\r\n        this.messageBus.publish(gridEventType, { type: gridEventType, data });\r\n    }\r\n\r\n    private calcMaxCanvasHeight(): number {\r\n        const dataLength = this.rowFactory.visibleRowCount();\r\n        return dataLength * this.rowHeight;\r\n    }\r\n\r\n    private executeSorting(sortInfos: SortInfo[]): void {\r\n        this.sortInfos(sortInfos);\r\n        if (!this.config.useExternalSorting) {\r\n            sortService.sort(this.sortedData, sortInfos);\r\n        }\r\n    }\r\n\r\n    private onConfigGroupsChanged(configGroups: Column[]): void {\r\n        this.trigger(GridEventType.GroupInfosChanged, configGroups);\r\n        this.rowFactory.filteredDataChanged();\r\n    }\r\n\r\n    private onFilteredDataChanged(): void {\r\n        this.maxCanvasHt(this.calcMaxCanvasHeight());\r\n        this.aggregationService.refreshGridAggregatesAsync();\r\n    }\r\n\r\n    private onSortInfosChanged(sortInfos: SortInfo[]): void {\r\n        this.trigger(GridEventType.SortInfosChanged, sortInfos);\r\n    }\r\n\r\n    private overrideColumnDefs(\r\n        columnDefs: ColumnDefinition[],\r\n        groupInfos: GroupInfo[] | undefined,\r\n        sortInfos: SortInfo[] | undefined\r\n    ): void {\r\n        this.buildColumns(columnDefs, groupInfos || this.configGroups(), sortInfos);\r\n        this.configureColumnWidths();\r\n        this.trigger(GridEventType.ColumnWidthsChanged, this.columns());\r\n    }\r\n\r\n    private overrideGroupInfos(groupInfos: GroupInfo[]): void {\r\n        const groupColOffset = this.groupColOffset();\r\n        const oldConfigGroups = this.configGroups();\r\n        oldConfigGroups.forEach((col): void => col.groupIndex(-1));\r\n\r\n        if (groupInfos.length && this.ensureCanGroupData()) {\r\n            const columnMap = new Map<string, Column>();\r\n            this.columns().forEach((col): any => columnMap.set(col.field, col));\r\n\r\n            const newConfigGroups: Column[] = [];\r\n            groupInfos.forEach((info): void => {\r\n                const col = columnMap.get(info.field);\r\n                if (col) {\r\n                    col.groupIndex(newConfigGroups.length);\r\n                    newConfigGroups.push(col);\r\n                }\r\n            });\r\n\r\n            if (newConfigGroups.length) {\r\n                const subtraction = oldConfigGroups.length - newConfigGroups.length;\r\n                const hasChanges =\r\n                    subtraction !== 0 ||\r\n                    newConfigGroups.some((col, i): boolean => col !== oldConfigGroups[i]);\r\n                if (hasChanges) {\r\n                    if (subtraction > 0) {\r\n                        this.columns.splice(groupColOffset, subtraction);\r\n                    }\r\n                    this.configGroups(newConfigGroups);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (oldConfigGroups.length) {\r\n            this.columns.splice(groupColOffset, oldConfigGroups.length);\r\n            this.configGroups.removeAll();\r\n            this.fixColumnIndexes();\r\n            domUtilityService.buildStyles(this);\r\n        }\r\n    }\r\n\r\n    private overrideSortInfos(sortInfos: SortInfo[]): void {\r\n        this.executeSorting(sortInfos);\r\n    }\r\n\r\n    private readCantPageBackward(): boolean {\r\n        const curPage = this.pagingOptions.currentPage();\r\n        return !(curPage > 1);\r\n    }\r\n\r\n    private readCantPageForward(): boolean {\r\n        const curPage = this.pagingOptions.currentPage();\r\n        const maxPages = this.maxPages();\r\n        return !(curPage < maxPages);\r\n    }\r\n\r\n    private readGroupPanelText(): string {\r\n        return this.configGroups().length > 0 || this.isDraggingOverGroups()\r\n            ? configuration.resourceStringsProvider.groupHeaderWithGroups()\r\n            : configuration.resourceStringsProvider.groupHeaderNoGroups();\r\n    }\r\n\r\n    private readMaxPages(): number {\r\n        return Math.ceil(this.maxRows() / this.pagingOptions.pageSize());\r\n    }\r\n\r\n    private readMaxRows(): number {\r\n        return Math.max(this.pagingOptions.totalServerItems() || this.totalFilteredItemsLength());\r\n    }\r\n\r\n    private readNonGroupColumns(): Readonly<Column[]> {\r\n        return this.columns().filter((col): boolean => !col.isGroupCol);\r\n    }\r\n\r\n    private readSelectedItemCount(): number {\r\n        return this.selectedItems().length;\r\n    }\r\n\r\n    private readTotalFilteredItemsLength(): number {\r\n        return this.filteredData().length;\r\n    }\r\n\r\n    private readViewportDimHeight(): number {\r\n        return Math.max(\r\n            0,\r\n            this.rootDim.outerHeight() - this.topPanelHeight - this.config.footerRowHeight\r\n        );\r\n    }\r\n\r\n    private readViewportDimWidth(): number {\r\n        const fixedRowsWidth = this.totalFixedRowWidth();\r\n        return Math.max(0, this.rootDim.outerWidth() - (fixedRowsWidth > 0 ? fixedRowsWidth : 0));\r\n    }\r\n\r\n    private readVisibleFixedColumns(): Readonly<Column[]> {\r\n        return this.columns().filter(\r\n            (column): boolean => column.visible() && this.legacyMode && column.fixed\r\n        );\r\n    }\r\n\r\n    private readVisibleNonFixedColumns(): Readonly<Column[]> {\r\n        return this.columns().filter(\r\n            (column: Column): boolean => column.visible() && (!this.legacyMode || !column.fixed)\r\n        );\r\n    }\r\n\r\n    public totalFixedRowWidth(): number {\r\n        let totalWidth = 0;\r\n        this.visibleFixedColumns().forEach((col): void => {\r\n            totalWidth += col.width;\r\n        });\r\n        return totalWidth;\r\n    }\r\n\r\n    public totalNonFixedRowWidth(): number {\r\n        let totalWidth = 0;\r\n        this.visibleNonFixedColumns().forEach((col): void => {\r\n            totalWidth += col.width;\r\n        });\r\n        return totalWidth;\r\n    }\r\n\r\n    private resizeOnData(col: Column): void {\r\n        // we calculate the longest data.\r\n        const useFixedContainer = this.legacyMode && col.fixed;\r\n        const headerScroller = useFixedContainer ? this.$fixedHeaderScroller : this.$headerScroller;\r\n        const viewport = useFixedContainer ? this.$fixedViewport : this.$viewport;\r\n        const index = useFixedContainer ? col.index : col.index - this.visibleFixedColumns().length;\r\n        let longest = col.minWidth - 7;\r\n        let elems = headerScroller\r\n            .find(`.col${index} .kgHeaderText`)\r\n            .add(viewport.find(`.col${index}.kgCellText`))\r\n            .add(viewport.find(`.col${index} .kgCellText`));\r\n        elems.each(function (i, elem): void {\r\n            const visualLength = utils.visualLength($(elem)) + 10; // +10 some margin\r\n            if (visualLength > longest) {\r\n                longest = visualLength;\r\n            }\r\n        });\r\n        col.width = Math.min(col.maxWidth, longest + 7); // + 7 px to make it look decent.\r\n        domUtilityService.buildStyles(this);\r\n    }\r\n\r\n    private sortData(column: Column, direction: SortDirection, isMulti: boolean): void {\r\n        const sortInfo = { column, direction };\r\n        let sortInfos = this.sortInfos();\r\n\r\n        if (isMulti) {\r\n            sortInfos = sortInfos.filter((x): boolean => x.column.field !== column.field);\r\n            sortInfos.push(sortInfo);\r\n        } else {\r\n            const columnFieldSet = new Set();\r\n            sortInfos.forEach((otherInfo): void => {\r\n                if (otherInfo.column.field !== column.field) {\r\n                    columnFieldSet.add(otherInfo.column.field);\r\n                }\r\n            });\r\n\r\n            this.columns().forEach((x): void => {\r\n                if (columnFieldSet.has(x.field)) {\r\n                    x.sortDirection(SortDirection.Unspecified);\r\n                }\r\n            });\r\n\r\n            sortInfos = [sortInfo];\r\n        }\r\n\r\n        this.executeSorting(sortInfos);\r\n        this.trigger(GridEventType.SettingsChangedByUser, { sortInfos });\r\n    }\r\n}\r\n\r\nfunction getSortInfoMap(sortInfo: SortInfo[]): Map<string, SortDirection> {\r\n    const result = new Map<string, SortDirection>();\r\n    sortInfo.forEach(function (info): void {\r\n        result.set(info.column.field, info.direction);\r\n    });\r\n\r\n    return result;\r\n}\r\n","import ko from 'knockout';\r\nimport sortService from '../sortService';\r\n\r\ninterface ChangeQueue extends ko.utils.ArrayChanges<object> {\r\n    hasRunFirstCycle?: boolean;\r\n}\r\n\r\nexport interface GridForEachOptions {\r\n    afterQueueFlush?: (dataProvider: () => Readonly<object[]>) => void;\r\n    batchSizeForAdd?: number;\r\n    data: ko.MaybeSubscribable<object[]>;\r\n    isDebugMode?: boolean;\r\n}\r\n\r\ninterface PendingAdd {\r\n    readonly changeItem: ko.utils.ArrayChange<object>;\r\n    readonly isPlaceholder: boolean;\r\n    readonly node: Node | undefined;\r\n}\r\n\r\ninterface VirtualNode {\r\n    readonly dataItem: object;\r\n    readonly isPlaceholder: boolean;\r\n    readonly node: Node | undefined;\r\n}\r\n\r\nconst defaultBatchSizeForAdd = 3;\r\n\r\nenum Status {\r\n    Added = 'added',\r\n    Deleted = 'deleted',\r\n    Retained = 'retained',\r\n}\r\n\r\nclass ProcessInfo {\r\n    public constructor() {\r\n        this.deletedIndexes = [];\r\n        this.insertedCount = 0;\r\n        this.movedIndexes = new Map();\r\n        this.pendingAdds = [];\r\n        this.usedDataItems = new Set();\r\n    }\r\n\r\n    public readonly movedIndexes: Map<number, boolean>;\r\n    public readonly usedDataItems: Set<object>;\r\n\r\n    public deletedIndexes: number[];\r\n    public insertedCount: number;\r\n    public pendingAdds: PendingAdd[];\r\n\r\n    public addNode(\r\n        changeItem: ko.utils.ArrayChange<object>,\r\n        node: Node | undefined,\r\n        isPlaceholder: boolean\r\n    ): void {\r\n        this.pendingAdds.push({\r\n            changeItem: changeItem,\r\n            node: node,\r\n            isPlaceholder: isPlaceholder,\r\n        });\r\n    }\r\n\r\n    public markDataItemAsUsed(dataItem: object): void {\r\n        this.usedDataItems.add(dataItem);\r\n    }\r\n}\r\n\r\nclass GridForEachHandler {\r\n    public constructor(\r\n        containerNode: HTMLElement,\r\n        bindingContext: ko.BindingContext,\r\n        options: GridForEachOptions\r\n    ) {\r\n        this.containerNode = containerNode;\r\n        this.bindingContext = bindingContext;\r\n        this.data = options.data;\r\n        this.batchSizeForAdd =\r\n            options.batchSizeForAdd != null && options.batchSizeForAdd >= 0\r\n                ? options.batchSizeForAdd\r\n                : defaultBatchSizeForAdd; // 0 = unrestricted\r\n        this.isDebugMode = !!options.isDebugMode;\r\n        this.afterQueueFlush =\r\n            options.afterQueueFlush &&\r\n            options.afterQueueFlush.bind(null, this.getDataItemsMapper());\r\n        this.templateNode = makeTemplateNode(containerNode);\r\n        this.changeQueue = [];\r\n        this.isRenderingQueued = false;\r\n        this.virtualNodes = [];\r\n    }\r\n\r\n    private readonly afterQueueFlush?: () => void;\r\n    private readonly batchSizeForAdd: number;\r\n    private readonly bindingContext: ko.BindingContext;\r\n    private readonly containerNode: HTMLElement;\r\n    private readonly data: ko.MaybeSubscribable<object[]>;\r\n    private readonly isDebugMode: boolean;\r\n    private readonly templateNode: Node;\r\n    private readonly virtualNodes: VirtualNode[];\r\n\r\n    private changeQueue: ChangeQueue;\r\n    private changeSubscription?: ko.Subscription;\r\n    private isRenderingQueued: boolean;\r\n\r\n    public start(): void {\r\n        this.onDataChange(ko.unwrap(this.data));\r\n        this.changeSubscription = this.watchForChanges(this.data);\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this.changeSubscription) {\r\n            this.changeSubscription.dispose();\r\n        }\r\n    }\r\n\r\n    private getDataItemsMapper(): () => Readonly<object[]> {\r\n        return (): Readonly<object[]> => {\r\n            return this.virtualNodes.map(getDataItem);\r\n        };\r\n    }\r\n\r\n    private watchForChanges(data: ko.MaybeSubscribable<object[]>): ko.Subscription | undefined {\r\n        return ko.isObservable(data) ? data.subscribe(this.onDataChange, this) : undefined;\r\n    }\r\n\r\n    private onDataChange(newData: object[]): void {\r\n        const oldData = this.virtualNodes.map(getDataItemDiscriminator);\r\n        let changeQueue = ko.utils.compareArrays(oldData, newData, { dontLimitMoves: true });\r\n        changeQueue = normalizeChangeQueue(changeQueue);\r\n\r\n        const hasChanges =\r\n            changeQueue.length && changeQueue[changeQueue.length - 1].status !== Status.Retained;\r\n        if (hasChanges) {\r\n            this.changeQueue = changeQueue;\r\n            this.changeQueue.hasRunFirstCycle = false;\r\n\r\n            if (!this.isRenderingQueued) {\r\n                this.isRenderingQueued = true;\r\n                this.enqueueRendering();\r\n            }\r\n        } else {\r\n            this.changeQueue = [];\r\n        }\r\n    }\r\n\r\n    private enqueueRendering(): void {\r\n        enqueueRendering(this.processQueue.bind(this));\r\n    }\r\n\r\n    private processQueue(): void {\r\n        const isFirstCycle = !this.changeQueue.hasRunFirstCycle;\r\n        const processInfo = new ProcessInfo();\r\n\r\n        if (isFirstCycle) {\r\n            if (this.bindingContext.$data.beforeRenderStarted) {\r\n                this.bindingContext.$data.beforeRenderStarted(this);\r\n            }\r\n            this.processFirstCycle(processInfo);\r\n            this.changeQueue.hasRunFirstCycle = true;\r\n        }\r\n\r\n        this.processCycle(processInfo);\r\n\r\n        if (isFirstCycle) {\r\n            processInfo.deletedIndexes.sort(sortService.sortNumber);\r\n            processInfo.pendingAdds.sort(sortPendingAdd);\r\n        }\r\n\r\n        this.flushPendingDeletes(processInfo);\r\n        this.flushPendingAdds(processInfo);\r\n\r\n        if (this.isDebugMode) {\r\n            this.ensureConsistentState();\r\n        }\r\n\r\n        if (this.changeQueue.length) {\r\n            this.enqueueRendering();\r\n        } else {\r\n            this.isRenderingQueued = false;\r\n            if (this.afterQueueFlush) {\r\n                this.afterQueueFlush();\r\n            }\r\n            if (this.bindingContext.$data.afterRenderFinished) {\r\n                this.bindingContext.$data.afterRenderFinished(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    private processFirstCycle(processInfo: ProcessInfo): void {\r\n        let lastAddedIndex = -2;\r\n        const changeQueue = this.changeQueue;\r\n\r\n        for (let i = 0; i < changeQueue.length; i++) {\r\n            const changeItem = changeQueue[i];\r\n\r\n            if (changeItem.status === Status.Retained) {\r\n                processInfo.markDataItemAsUsed(changeItem.value);\r\n                changeQueue.splice(i--, 1);\r\n            } else if (changeItem.status === Status.Added) {\r\n                const moveFromIndex = changeItem.moved;\r\n                if (moveFromIndex !== undefined) {\r\n                    processInfo.markDataItemAsUsed(changeItem.value);\r\n                    processInfo.movedIndexes.set(moveFromIndex, true);\r\n                    processInfo.addNode(changeItem, this.virtualNodes[moveFromIndex].node, false);\r\n                    changeQueue.splice(i--, 1);\r\n                    lastAddedIndex = changeItem.index;\r\n                }\r\n            } else if (changeItem.index === lastAddedIndex) {\r\n                processInfo.deletedIndexes.push(changeItem.index);\r\n                changeQueue.splice(i--, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private processCycle(processInfo: ProcessInfo): void {\r\n        const changeQueue = this.changeQueue;\r\n\r\n        for (let i = 0; i < changeQueue.length; i++) {\r\n            const changeItem = changeQueue[i];\r\n\r\n            if (changeItem.status === Status.Added) {\r\n                if (this.batchSizeForAdd && processInfo.insertedCount === this.batchSizeForAdd) {\r\n                    const nextQueueIndex = i + 1;\r\n                    const isDeletingThisIndex =\r\n                        changeQueue.length > nextQueueIndex &&\r\n                        changeQueue[nextQueueIndex].index === changeItem.index;\r\n\r\n                    if (isDeletingThisIndex) {\r\n                        const isDataItemUsedByAnotherIndex =\r\n                            this.virtualNodes.length > changeItem.index &&\r\n                            processInfo.usedDataItems.has(\r\n                                this.virtualNodes[changeItem.index].dataItem\r\n                            );\r\n                        if (isDataItemUsedByAnotherIndex) {\r\n                            processInfo.addNode(changeItem, undefined, true);\r\n                        } else {\r\n                            // Keep the existing node. It'll be removed and replaced in subsequent cycles. This helps prevent flickering.\r\n                            processInfo.movedIndexes.set(changeItem.index, true);\r\n                            processInfo.addNode(\r\n                                changeItem,\r\n                                this.virtualNodes[changeItem.index].node,\r\n                                true\r\n                            );\r\n                        }\r\n                        processInfo.deletedIndexes.push(changeItem.index);\r\n                    } else {\r\n                        processInfo.addNode(changeItem, undefined, true);\r\n                        changeQueue.splice(i + 1, 0, {\r\n                            status: Status.Deleted,\r\n                            value: changeItem.value,\r\n                            index: changeItem.index,\r\n                        }); // Enqueue a deletion to remove the placeholder node.\r\n                    }\r\n\r\n                    i++; // Keep the enqueued deletion and skip to the next index.\r\n                } else {\r\n                    processInfo.addNode(changeItem, this.templateNode.cloneNode(true), false);\r\n                    processInfo.insertedCount++;\r\n                    changeQueue.splice(i--, 1);\r\n                }\r\n            } else {\r\n                processInfo.deletedIndexes.push(changeItem.index);\r\n                changeQueue.splice(i--, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private flushPendingDeletes(processInfo: ProcessInfo): void {\r\n        for (let i = processInfo.deletedIndexes.length - 1; i >= 0; i--) {\r\n            const index = processInfo.deletedIndexes[i];\r\n            if (!processInfo.movedIndexes.get(index)) {\r\n                const node = this.virtualNodes[index].node;\r\n                if (node) {\r\n                    ko.removeNode(node);\r\n                }\r\n            }\r\n\r\n            this.virtualNodes.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private flushPendingAdds(processInfo: ProcessInfo): void {\r\n        let lastAddedIndex = -2;\r\n        const contiguousGroups: (Node[] & { changeItemIndex: number })[] = [];\r\n        processInfo.pendingAdds.forEach((pendingAdd): void => {\r\n            const changeItem = pendingAdd.changeItem;\r\n            this.virtualNodes.splice(changeItem.index, 0, {\r\n                dataItem: changeItem.value,\r\n                node: pendingAdd.node,\r\n                isPlaceholder: pendingAdd.isPlaceholder,\r\n            });\r\n\r\n            if (pendingAdd.node) {\r\n                let group: Node[] & { changeItemIndex: number };\r\n                if (changeItem.index !== lastAddedIndex + 1) {\r\n                    group = [] as any;\r\n                    group.changeItemIndex = changeItem.index;\r\n                    contiguousGroups.push(group);\r\n                } else {\r\n                    group = contiguousGroups[contiguousGroups.length - 1];\r\n                }\r\n\r\n                group.push(pendingAdd.node);\r\n                lastAddedIndex = changeItem.index;\r\n            }\r\n        });\r\n\r\n        const containerNode = this.containerNode;\r\n        contiguousGroups.forEach((group): void => {\r\n            const previousNode = this.getNodeBeforeIndex(group.changeItemIndex);\r\n            insertAllAfter(containerNode, group, previousNode);\r\n        });\r\n\r\n        processInfo.pendingAdds.forEach((pendingAdd): void => {\r\n            const changeItem = pendingAdd.changeItem;\r\n            if (changeItem.moved === undefined && !pendingAdd.isPlaceholder) {\r\n                const childContext = this.bindingContext.createChildContext(changeItem.value);\r\n                ko.applyBindings(childContext, pendingAdd.node as Node);\r\n            }\r\n        });\r\n    }\r\n\r\n    private ensureConsistentState(): void {\r\n        const data = ko.unwrap(this.data);\r\n        const expectedLength = data.length;\r\n        const actualLength = this.virtualNodes.length;\r\n        /* istanbul ignore next */\r\n        if (this.virtualNodes.length !== expectedLength) {\r\n            throw new Error(\r\n                `Internal state is invalid. Expected ${expectedLength} node(s) but there are ${actualLength}.`\r\n            );\r\n        }\r\n    }\r\n\r\n    private getNodeBeforeIndex(changeItemIndex: number): Node | undefined {\r\n        if (changeItemIndex === 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let virtualNode;\r\n        let index = changeItemIndex - 1;\r\n        while (!(virtualNode = this.virtualNodes[index]).node && index > 0) {\r\n            index--;\r\n        }\r\n\r\n        return virtualNode.node;\r\n    }\r\n}\r\n\r\nfunction makeTemplateNode(containerNode: HTMLElement): Node {\r\n    let result;\r\n    for (let i = containerNode.childNodes.length - 1; i >= 0; i--) {\r\n        const node = containerNode.childNodes[i];\r\n        containerNode.removeChild(node);\r\n\r\n        if (\r\n            node.nodeType === Node.TEXT_NODE &&\r\n            (!node.textContent || node.textContent.trim().length === 0)\r\n        ) {\r\n            continue;\r\n        }\r\n\r\n        if (result) {\r\n            throw new Error('Templates with more than one element are not supported.');\r\n        }\r\n\r\n        result = node;\r\n    }\r\n\r\n    if (!result) {\r\n        throw new Error('Template does not contain any content.');\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getDataItem(virtualNode: VirtualNode): object {\r\n    return virtualNode.dataItem;\r\n}\r\n\r\nfunction getDataItemDiscriminator(virtualNode: VirtualNode): object {\r\n    return !virtualNode.isPlaceholder ? virtualNode.dataItem : virtualNode;\r\n}\r\n\r\nfunction normalizeChangeQueue(changeQueue: ko.utils.ArrayChanges<object>): ChangeQueue {\r\n    return changeQueue.sort(compareChangeItem);\r\n}\r\n\r\nfunction compareChangeItem(\r\n    a: ko.utils.ArrayChange<object>,\r\n    b: ko.utils.ArrayChange<object>\r\n): number {\r\n    const bIsRetained = b.status === Status.Retained;\r\n    if (a.status === Status.Retained) {\r\n        return bIsRetained ? 0 : -1;\r\n    }\r\n    if (bIsRetained) {\r\n        return 1;\r\n    }\r\n    if (a.index !== b.index) {\r\n        return a.index - b.index;\r\n    }\r\n    // We have a pair of added and deleted, in any order.\r\n    return a.status === Status.Deleted ? 1 : -1;\r\n}\r\n\r\nfunction sortPendingAdd(a: PendingAdd, b: PendingAdd): number {\r\n    return a.changeItem.index - b.changeItem.index;\r\n}\r\n\r\nfunction insertAllAfter(\r\n    containerNode: HTMLElement,\r\n    nodesToInsert: Node[],\r\n    nodeToInsertAfter: Node | undefined\r\n): void {\r\n    let nodeToInsert: Node;\r\n    if (nodesToInsert.length === 1) {\r\n        nodeToInsert = nodesToInsert[0];\r\n    } else {\r\n        nodeToInsert = document.createDocumentFragment();\r\n        nodesToInsert.forEach(function (node): void {\r\n            nodeToInsert.appendChild(node);\r\n        });\r\n    }\r\n\r\n    try {\r\n        // insertAfter actually supports having undefined nodeToInsertAfter but the type definition is wrong.\r\n        ko.virtualElements.insertAfter(containerNode, nodeToInsert, nodeToInsertAfter as Node);\r\n    } catch (error) {\r\n        // IE can randomly fail with an \"Unspecified error\". Simply retrying will succeed.\r\n        ko.virtualElements.insertAfter(containerNode, nodeToInsert, nodeToInsertAfter as Node);\r\n    }\r\n}\r\n\r\nconst kgGridForEach = {\r\n    animateFrame: getAnimateFrame(),\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor: () => any,\r\n        allBindings: ko.AllBindings,\r\n        viewModel: any,\r\n        bindingContext: ko.BindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        let options: Partial<GridForEachOptions> = valueAccessor();\r\n        if (Object.getPrototypeOf(options) !== Object.prototype) {\r\n            options = { data: options as ko.MaybeSubscribable<object[]> };\r\n        }\r\n\r\n        const handler = new GridForEachHandler(\r\n            element,\r\n            bindingContext,\r\n            options as GridForEachOptions\r\n        );\r\n\r\n        handler.start();\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function (): void {\r\n            handler.dispose();\r\n        });\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n\r\nexport function getAnimateFrame(): (callback: () => any) => number {\r\n    return (\r\n        window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        (window as any).mozRequestAnimationFrame ||\r\n        (window as any).msRequestAnimationFrame ||\r\n        function (callback): number {\r\n            return window.setTimeout(callback, 1000 / 60);\r\n        }\r\n    );\r\n}\r\n\r\nfunction enqueueRendering(callback: () => void): void {\r\n    kgGridForEach.animateFrame.call(window, callback);\r\n}\r\n\r\nko.bindingHandlers.kgGridForEach = kgGridForEach;\r\nexport default kgGridForEach;\r\n","﻿import bowser from 'bowser';\r\nimport $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Dimension from '../classes/Dimension';\r\nimport EventProvider from '../classes/EventProvider';\r\nimport Grid from '../classes/Grid';\r\nimport { GridEventOptions, GridOptions } from '../classes/grid-config';\r\nimport configuration from '../configuration';\r\nimport { GridEventType } from '../constants';\r\nimport domUtilityService from '../domUtilityService';\r\nimport templates from '../templates/templates';\r\nimport { PropertyBag } from '../types';\r\nimport './kgGridForEach';\r\n\r\nko.bindingHandlers.koGrid = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const options: Partial<GridOptions> = Object.assign({}, valueAccessor());\r\n        if (!options.data) {\r\n            throw new Error('data must be specified.');\r\n        }\r\n\r\n        const elem = $(element).addClass('koGrid');\r\n        const userViewModel: PropertyBag = bindingContext.$data;\r\n        const gridElem = $(options.gridTemplate || templates.defaultGridTemplate()).appendTo(\r\n            element\r\n        );\r\n        const gridContainers = domUtilityService.getGridContainers(elem);\r\n        options.gridContainers = gridContainers;\r\n        options.gridDim = new Dimension(elem.width() || 0, elem.height() || 0);\r\n        options.userViewModel = userViewModel;\r\n\r\n        initViewportBindingString(gridContainers.$viewport, options);\r\n        initRowBindingString(gridContainers.$viewport, options);\r\n\r\n        options.legacyMode =\r\n            configuration.legacyMode != null\r\n                ? configuration.legacyMode\r\n                : bowser.test(['msie', 'msedge']);\r\n\r\n        if (!options.legacyMode) {\r\n            gridContainers.$fixedHeaderContainer.remove();\r\n            gridContainers.$fixedHeaderContainer = $();\r\n            gridContainers.$fixedHeaderScroller = $();\r\n            gridContainers.$fixedViewport.remove();\r\n            gridContainers.$fixedViewport = $();\r\n            gridContainers.$fixedCanvas = $();\r\n        }\r\n\r\n        const grid = Grid.init(options as GridOptions);\r\n        elem.addClass(grid.gridId.toString());\r\n        options.data.subscribe(onDataChanged.bind(null, grid));\r\n\r\n        const childBindingContext = bindingContext.createChildContext(grid);\r\n        childBindingContext.$css = configuration.css;\r\n        childBindingContext.$grid = grid;\r\n        childBindingContext.$resStrings = configuration.resourceStringsProvider;\r\n        childBindingContext.$userViewModel = userViewModel;\r\n        ko.applyBindings(childBindingContext, gridElem[0]);\r\n\r\n        domUtilityService.updateGridLayout(grid);\r\n        grid.configureColumnWidths();\r\n        grid.refreshDomSizes();\r\n\r\n        //now use the manager to assign the event handlers\r\n        grid.eventProvider = EventProvider.init(grid, options as GridOptions);\r\n\r\n        //initialize plugins.\r\n        if (options.plugins) {\r\n            options.plugins.forEach(function (p): void {\r\n                p.onGridInit(grid);\r\n            });\r\n        }\r\n\r\n        domUtilityService.buildStyles(grid);\r\n        initEventHandlers(grid, options.events);\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, dispose.bind(null, grid));\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n\r\nfunction initViewportBindingString(viewport: JQuery, options: Partial<GridOptions>): void {\r\n    if (options.viewportBindingString) {\r\n        const bindingString = viewport.attr('data-bind') + ', ' + options.viewportBindingString;\r\n        viewport.attr('data-bind', bindingString);\r\n    }\r\n}\r\n\r\nfunction initRowBindingString(viewport: JQuery, options: Partial<GridOptions>): void {\r\n    if (options.rowBindingString) {\r\n        const row = viewport.find('.kgRow');\r\n        const bindingString = row.attr('data-bind') + ', ' + options.rowBindingString;\r\n        row.attr('data-bind', bindingString);\r\n    }\r\n}\r\n\r\nfunction initEventHandlers(grid: Grid, events: GridEventOptions | undefined): void {\r\n    if (!events) {\r\n        return;\r\n    }\r\n\r\n    if (events.groupInfosChanged) {\r\n        grid.on(GridEventType.GroupInfosChanged, events.groupInfosChanged);\r\n    }\r\n\r\n    if (events.sortInfosChanged) {\r\n        grid.on(GridEventType.SortInfosChanged, events.sortInfosChanged);\r\n    }\r\n}\r\n\r\nfunction dispose(grid: Grid): void {\r\n    if (grid.styleSheet) {\r\n        $(grid.styleSheet).remove();\r\n    }\r\n}\r\n\r\n// TODO: WI00244945 - optimize the handlers below as some functions are called multiple times.\r\n\r\nfunction onDataChanged(grid: Grid): void {\r\n    grid.searchProvider.evalFilter();\r\n    grid.refreshDomSizes();\r\n}\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Grid from '../classes/Grid';\r\nimport { GridEventType } from '../constants';\r\nimport { GridRow } from '../types';\r\n\r\nko.bindingHandlers.kgRow = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: GridRow,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const grid: Grid = bindingContext.$parent;\r\n        const source = viewModel.isGroupRow ? grid.groupRowTemplate : grid.rowTemplate;\r\n        const rowElem = $(source).appendTo(element);\r\n        bindingContext.$row = viewModel;\r\n        ko.applyBindings(bindingContext, rowElem[0]);\r\n        grid.trigger(GridEventType.RowBound, { row: viewModel, rowElement: element });\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Grid from '../classes/Grid';\r\nimport templates from '../templates/templates';\r\nimport { GridRow } from '../types';\r\n\r\nko.bindingHandlers.kgFixedRow = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: GridRow,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const grid: Grid = bindingContext.$parent;\r\n        const source = viewModel.isGroupRow\r\n            ? templates.defaultFixedGroupTemplate()\r\n            : grid.fixedRowTemplate;\r\n        const rowElem = $(source).appendTo(element);\r\n        bindingContext.$row = viewModel;\r\n        ko.applyBindings(bindingContext, rowElem[0]);\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Grid from '../classes/Grid';\r\n\r\nko.bindingHandlers.kgFixedHeaderRow = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Grid,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const headerRow = $(viewModel.fixedHeaderRowTemplate).appendTo(element);\r\n        ko.applyBindings(bindingContext, headerRow[0]);\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Column from '../classes/Column';\r\n\r\nko.bindingHandlers.kgCell = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Column,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        if (viewModel.cellTemplate) {\r\n            const cell = $(viewModel.cellTemplate).appendTo(element);\r\n            ko.applyBindings(bindingContext, cell[0]);\r\n        }\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n    update: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Column,\r\n        bindingContext\r\n    ): void {\r\n        if (!viewModel.cellTemplate && !viewModel.isGroupCol) {\r\n            const value = viewModel.getProperty(bindingContext.$parent);\r\n            element.textContent = value != null ? value.toString() : '';\r\n        }\r\n    },\r\n};\r\n","﻿import ko from 'knockout';\r\nimport Column from '../classes/Column';\r\n\r\nko.bindingHandlers.kgCellClass = {\r\n    update: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Column,\r\n        bindingContext\r\n    ): void {\r\n        const index = bindingContext.$index && bindingContext.$index();\r\n        let className = viewModel.cellClass + ' kgCell col' + index;\r\n        if (!viewModel.cellTemplate) {\r\n            className += ' kgCellText';\r\n        }\r\n        element.className = className;\r\n    },\r\n};\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Grid from '../classes/Grid';\r\n\r\nko.bindingHandlers.kgHeaderRow = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Grid,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const headerRow = $(viewModel.headerRowTemplate).appendTo(element);\r\n        ko.applyBindings(bindingContext, headerRow[0]);\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n","﻿import $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport Column from '../classes/Column';\r\n\r\nko.bindingHandlers.kgHeaderCell = {\r\n    init: function (\r\n        element: HTMLElement,\r\n        valueAccessor,\r\n        allBindings,\r\n        viewModel: Column,\r\n        bindingContext\r\n    ): ko.BindingHandlerControlsDescendant {\r\n        const headerCell = $(viewModel.headerCellTemplate).appendTo(element);\r\n        ko.applyBindings(bindingContext, headerCell[0]);\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n};\r\n","import $ from 'jquery';\r\nimport ko from 'knockout';\r\n\r\ninterface Options {\r\n    mouseDown?: (event: JQueryMouseEventObject) => any;\r\n}\r\n\r\nko.bindingHandlers.mouseEvents = {\r\n    init: function (element, valueAccessor): void {\r\n        const eFuncs: Options = valueAccessor();\r\n        if (eFuncs.mouseDown) {\r\n            $(element).on('mousedown', eFuncs.mouseDown);\r\n        }\r\n    },\r\n};\r\n","import { AggregateOperation } from './constants';\r\nimport moveSelectionHandler from './moveSelectionHandler';\r\nimport utils from './utils';\r\nimport templates from './templates/templates';\r\nimport './binding-handlers/koGrid';\r\nimport './binding-handlers/kgRow';\r\nimport './binding-handlers/kgFixedRow';\r\nimport './binding-handlers/kgFixedHeaderRow';\r\nimport './binding-handlers/kgCell';\r\nimport './binding-handlers/kgCellClass';\r\nimport './binding-handlers/kgHeaderRow';\r\nimport './binding-handlers/kgHeaderCell';\r\nimport './binding-handlers/kgGridForEach';\r\nimport './binding-handlers/mouseEvents';\r\nimport Column from './classes/Column';\r\nimport { DefaultAggregationProvider } from './classes/DefaultAggregationProvider';\r\nimport Dimension from './classes/Dimension';\r\nimport EventProvider from './classes/EventProvider';\r\nimport RowFactory from './classes/RowFactory';\r\nimport Grid from './classes/Grid';\r\nimport Group from './classes/Group';\r\nimport Range from './classes/Range';\r\nimport Row from './classes/Row';\r\nimport SearchProvider from './classes/SearchProvider';\r\nimport SelectionService from './classes/SelectionService';\r\nimport styleProvider from './styleProvider';\r\nimport sortService from './sortService';\r\nimport domUtilityService from './domUtilityService';\r\nimport { configure } from './configuration';\r\n\r\nexport default {\r\n    AggregateOperation,\r\n    Column,\r\n    config: configure,\r\n    DefaultAggregationProvider,\r\n    defaultGroupRowTemplate: templates.defaultGroupRowTemplate,\r\n    defaultHeaderCellTemplate: templates.defaultHeaderCellTemplate,\r\n    defaultHeaderRowTemplate: templates.defaultHeaderRowTemplate,\r\n    defaultRowTemplate: templates.defaultRowTemplate,\r\n    Dimension,\r\n    domUtilityService,\r\n    EventProvider,\r\n    Grid,\r\n    Group,\r\n    moveSelectionHandler,\r\n    Range,\r\n    Row,\r\n    RowFactory,\r\n    SearchProvider,\r\n    SelectionService,\r\n    sortService,\r\n    styleProvider,\r\n    utils,\r\n};\r\n"],"names":["EXCESS_ROWS","SCROLL_THRESHOLD","AggregateOperation","GridEventType","ResizeTarget","RowReorderingMode","SortDirection","moveSelectionHandler","grid","evt","charCode","which","offset","lastClickedRow","selectionService","items","renderedRows","index","indexOf","length","changeSelection","$viewport","scrollTop","rowHeight","canvas","visualLength","node","text","trim","document","createElement","context","getContext","font","css","metrics","measureText","width","evalProperty","entity","path","propPath","split","i","tempProp","ko","unwrap","links","hasValue","value","isPointerOverElement","event","x","originalEvent","pageX","y","pageY","bounds","getBoundingClientRect","left","right","top","bottom","newId","seedId","Date","getTime","defaultGridTemplate","defaultRowTemplate","defaultFixedRowTemplate","defaultGroupRowTemplate","defaultGroupTemplate","defaultFixedGroupTemplate","defaultHeaderRowTemplate","defaultHeaderCellTemplate","defaultFixedHeaderRowTemplate","Dimension","_createClass","height","_classCallCheck","outerWidth","observable","outerHeight","columnMenuFilter","columnMenuGroupBy","columnMenuText","footerFirstPage","footerLastPage","footerNextPage","footerPageSize","footerPreviousPage","footerSelectedItems","footerShownItems","footerTotalItems","groupHeaderNoGroups","groupHeaderWithGroups","configuration","groupCollapsedClass","groupExpandedClass","groupArrowClass","removeGroupClass","utils","legacyMode","undefined","resourceStringsProvider","configure","options","Object","assign","domUtilityService","getGridContainers","rootEl","$topPanel","find","$headerContainer","$fixedHeaderContainer","$fixedViewport","$root","$groupPanel","$headerScroller","$canvas","$fixedHeaderScroller","$fixedCanvas","updateGridLayout","refreshDomSizes","adjustScrollTop","buildStyles","gridId","style","styleSheet","id","type","body","appendChild","totalNonFixedRowWidth","kgHeaderScrollerWidth","scrollH","concat","config","headerRowHeight","getColumnStyles","visibleNonFixedColumns","totalFixedRowWidth","visibleFixedColumns","textContent","join","scrollW","columns","sumWidth","forEach","col","push","fixedClass","measureScrollbars","$testContainer","$","append","appendTo","clientHeight","clientWidth","remove","groupPanelDragOverClass","EventProvider","colToMove","groupToMove","rowToMove","groupPlaceholder","key","assignGridEventHandlers","on","e","scrollLeft","target","adjustScrollLeft","adjustFixedViewportScrollTop","tabIndex","querySelectorAll","attr","assignResizeEventHandler","assignEvents","onGroupDragStart","bind","onGroupDragEnter","onGroupDragOver","onGroupDragLeave","onGroupDrop","onHeaderDragStart","onHeaderDragOver","onHeaderDrop","onTopPanelDragEnd","enableRowReordering","onRowHoverInBound","onRowHoverIn","onRowHoverOutBound","onRowHoverOut","_this","rowReorderingMode","jQueryUI","row","activateJqueryUIRowDragging","get","RowBound","_ref","data","rowElement","Native","onRowMouseDown","onRowDragOverNative","onRowDropNative","groupItem","currentTarget","groupItemScope","dataFor","groupIndex","allowDragging","createGroupPlaceholder","setTimeout","hide","preventDefault","addClass","placeholder","moveGroupPlaceholderToPointer","show","isDraggingOverGroups","removeClass","configGroups","dropTarget","next","groupScope","targetIndex","splice","valueHasMutated","fixGroupIndexes","includes","groupBy","sortColumn","targetClass","fixed","classList","contains","headerScope","cols","peek","fixColumnIndexes","trigger","SettingsChangedByUser","columnDefs","settings","isGroupRow","$row","draggable","scope","helper","handle","rowReorderingHandle","parent","stack","containment","start","revert","revertDuration","zIndex","droppable","over","onRowDragOverJQueryUI","out","onRowDragOutJQueryUI","drop","onRowDropJQueryUI","targetRow","setAttribute","hoveredEntity","targetRowScope","rowIndex","rowToMoveIndex","targetRowIndex","add","onRowDropCore","prevRow","rowScope","sd","sortedData","j","searchProvider","evalFilter","init","provider","dataTransfer","setData","handler","shouldMaintainColumnRatios","configureColumnWidths","resizeTarget","Root","window","domNodeDisposal","addDisposeCallback","off","closest","centerPoint","insertBefore","insertAfter","colSortFnCache","WeakMap","dateRE","guessSortFn","item","sortFn","itemType","_typeof","sortNumber","sortBool","prototype","toString","call","sortDate","basicSort","match","sortNumberStr","dateParts","month","parseInt","day","sortDDMMStr","sortMMDDStr","sortAlpha","a","b","badA","badB","numA","parseFloat","replace","isNaN","numB","strA","toLowerCase","strB","timeA","timeB","sortDateStr","isDDMM","dateA","getStrDate","dateB","dateStr","m","d","date","mtch","sortData","unwrappedData","sortInfo","column","sortingAlgorithm","set","field","sort","itemA","itemB","propA","propB","propAIsEmpty","propBIsEmpty","val","direction","Ascending","Array","isArray","styleProvider","canvasStyle","pureComputed","maxCanvasHt","headerScrollerStyle","topPanelStyle","rootDim","topPanelHeight","headerStyle","viewportDimWidth","fixedHeaderStyle","fixedViewportDimWidth","groupPanelStyle","viewportPanelStyle","viewportDimHeight","viewportStyle","fixedViewportStyle","footerStyle","footerRowHeight","DefaultAggregationProvider","getAllEntities","getDataForAggregatesAsync","calculateAggregationsAsync","aggregation","group","Promise","$return","$error","entities","results","total","flattenChildren","resolve","getValuesAsync","then","$await_1","operations","Total","calculateTotal","operation","result","Average","calculateAverage","$boundEx","getDataPromises","map","$await_2","all","Aggregation","addOperation","removeOperation","operationIndex","AggregationService","aggregationProvider","aggregationPromises","Map","aggregationGroupPromises","aggregateConfig","aggregatingFields","observableArray","isAggregating","getAggregatePromiseKey","addAggregateColumnAsync","getOrCreateAggregation","onAggregationConfigChanged","calculateGridAggregationsAsync","calculateGroupAggregationsAsync","refreshGridAggregatesAsync","calculateGridAggregationsPromises","clearGridAggregationResults","$await_3","refreshGroupAggregatesAsync","_this2","calculateGroupAggregationsPromises","clearGroupAggregationResults","$await_4","_this3","aggregationPromise","newResults","currentAggregation","validAggregationResults","$await_5","aggregationResult","currentPromise","delete","aggregateResults","removeAggregateColumn","aggregationIndex","findIndex","toggleAggregateAsync","$If_1","$await_6","aggregateInfos","removeFunc","r","rowFactory","groupCache","overrideAggregateInfosAsync","_this4","promises","removeAll","aggregateInfo","$await_7","clear","_this5","groupAggregationsPromises","allResults","successfulAggregations","promise","$await_8","Set","currentPromises","doubleClickDelay","Column","colDef","clicks","startMousePosition","timer","eventTarget","getFixedClass","isGroupCol","displayName","origWidth","minWidth","maxWidth","cellClass","getCellClass","cellFilter","cellTemplate","headerClass","headerCellTemplate","templates","isGroupedBy","readIsGroupedBy","groupedByClass","readGroupedByClass","_visible","visible","read","readVisible","write","writeVisible","owner","sortable","enableSort","sortDirection","Unspecified","sortCallback","showSortButtonUp","readShowSortButtonUp","showSortButtonDown","readShowSortButtonDown","noSortVisible","readNoSortVisible","resizable","enableResize","resizeOnDataCallback","getProperty","ret","toggleVisible","v","dir","Descending","shiftKey","gripClick","stopPropagation","clearTimeout","gripOnMouseDown","parentElement","cursor","clientX","onMouseMove","gripOnMouseUp","diff","newWidth","htmlTarget","ColumnWidthsChanged","defaults","canSelectRows","returnTrue","enableColumnResize","enableSorting","evalPropertyForGroup","returnUndefined","useExternalSorting","returnFalse","filterOptionsDefaults","filterThrottle","useExternalFilter","pagingOptionsDefaults","currentPage","pageSize","pageSizes","totalServerItems","mergeWithDefaults","keys","getGridConfig","filterOptions","footerVisible","getPagingOptions","pagingOptions","namespaceDelimiter","MessageBus","subscriptions","publish","messageType","namespace","getMessageTypeNamespace","_messageHandlers$get","messageTypePrefix","getMessageTypeWithoutNamespace","messageHandlers","h","subscribe","messageHandler","messageHandlersOfNamespace","unsubscribe","removeAllMessageHandlers","indexNamespaceDelimiter","substring","Range","topRow","bottomRow","Group","groupEntity","groupChildren","groupClass","readGroupClass","children","collapsed","depth","isEven","isOdd","label","offsetLeft","offsetTop","isSelected","readIsSelected","isFullySelected","readIsFullySelected","firstChild","readFirstChild","selectedChildren","readSelectedChildren","totalChildren","readTotalChildren","toggleExpand","GroupToggleStarted","setExpand","toggleSelected","notifyChildren","child","setHidden","rowCache","renderedChange","groupChild","state","Row","readIsEven","readIsOdd","propertyCache","isGroupEntity","Symbol","RowFactory","groupedData","numberOfGroups","parsedData","_renderedRange","minRowsToRender","hiddenEntities","WeakSet","filteredDataChanged","filteredData","rebuildRowCache","groups","getGrouping","clearGrouping","updateViewableRange","renderedChangeNoGroups","dataArray","filter","has","slice","rowArr","indx","buildGroupRow","buildEntityRow","rowEntities","isHidden","newRange","visibleRowCount","createGroupColumns","splitDataIntoGroups","parseGroupData","aggregationService","parentCache","valueGroups","_defineProperty","groupRow","dataArr","renderedRange","Math","min","maxDepth","groupColOffset","hasAddedGroup","columnConfig","currentGroup","c","childGroup","SearchProvider","fieldMap","searchConditions","lastSearchStr","filterTextComputed","computed","processFilterText","extend","throttle","gridColumnsSubscription","_destroy","len","condition","prop","hasOwnProperty","pVal","regex","test","columnDisplay","filterText","buildSearchConditions","columnFilters","args","columnName","columnValue","getRegExp","str","modifiers","RegExp","_unused","SelectionService","_lastClickedRow","selectedItemSet","readSelectedItemSet","multiSelect","changeSelectionMulti","changeSelectionSingle","selectRange","startRow","endRow","keepLastSelected","startIndex","endIndex","tempIndex","tempRow","rowCount","selectedItems","select","ctrlKey","isArrowKeyUpDown","selectOnly","flattenEntities","entitySet","addGroupEntities","keyCode","Grid","$userViewModel","userViewModel","gridContainers","prevScrollTop","prevScrollIndex","gridDim","jqueryUITheme","readViewportDimHeight","readViewportDimWidth","sortInfos","showFilter","totalFilteredItemsLength","readTotalFilteredItemsLength","readVisibleNonFixedColumns","readVisibleFixedColumns","nonGroupColumns","readNonGroupColumns","maintainColumnRatios","hasRatioColumn","rowTemplate","groupRowTemplate","fixedRowTemplate","headerRowTemplate","fixedHeaderRowTemplate","disableTextSelection","selectedItemCount","readSelectedItemCount","showMenu","showColumnMenu","enableGrouping","ensureCanGroupData","groupPanelText","readGroupPanelText","enablePaging","maxRows","readMaxRows","maxPages","readMaxPages","cantPageForward","readCantPageForward","cantPageBackward","readCantPageBackward","styles","messageBus","force","floor","oldRange","max","viewportScrollTop","viewportHeight","scrollDiff","buildColumns","groupInfos","sortInfoMap","getSortInfoMap","resizeOnData","columnMap","info","asterisks","percents","asteriskNum","totalWidth","endsWith","Error","remainingWidth","asteriskVal","isOverflowing","asterisk","isHoveredEntity","viewportH","gridEventType","overrideSettings","gridSettings","shouldTriggerEvent","overrideColumnDefs","overrideGroupInfos","overrideSortInfos","pageBackward","page","pageForward","pageToFirst","pageToLast","calcMaxCanvasHeight","removeGroup","toggleGroup","colIndex","toggleShowMenu","dataLength","executeSorting","sortService","onConfigGroupsChanged","GroupInfosChanged","onFilteredDataChanged","onSortInfosChanged","SortInfosChanged","oldConfigGroups","newConfigGroups","subtraction","hasChanges","some","curPage","ceil","fixedRowsWidth","useFixedContainer","headerScroller","viewport","longest","elems","each","elem","isMulti","columnFieldSet","otherInfo","defaultBatchSizeForAdd","Status","ProcessInfo","deletedIndexes","insertedCount","movedIndexes","pendingAdds","usedDataItems","addNode","changeItem","isPlaceholder","markDataItemAsUsed","dataItem","GridForEachHandler","containerNode","bindingContext","batchSizeForAdd","isDebugMode","afterQueueFlush","getDataItemsMapper","templateNode","makeTemplateNode","changeQueue","isRenderingQueued","virtualNodes","onDataChange","changeSubscription","watchForChanges","dispose","getDataItem","isObservable","newData","oldData","getDataItemDiscriminator","compareArrays","dontLimitMoves","normalizeChangeQueue","status","Retained","hasRunFirstCycle","enqueueRendering","processQueue","isFirstCycle","processInfo","$data","beforeRenderStarted","processFirstCycle","processCycle","sortPendingAdd","flushPendingDeletes","flushPendingAdds","ensureConsistentState","afterRenderFinished","lastAddedIndex","Added","moveFromIndex","moved","nextQueueIndex","isDeletingThisIndex","isDataItemUsedByAnotherIndex","Deleted","cloneNode","removeNode","contiguousGroups","pendingAdd","changeItemIndex","previousNode","getNodeBeforeIndex","insertAllAfter","childContext","createChildContext","applyBindings","expectedLength","actualLength","virtualNode","childNodes","removeChild","nodeType","Node","TEXT_NODE","compareChangeItem","bIsRetained","nodesToInsert","nodeToInsertAfter","nodeToInsert","createDocumentFragment","virtualElements","error","kgGridForEach","animateFrame","getAnimateFrame","element","valueAccessor","allBindings","viewModel","getPrototypeOf","controlsDescendantBindings","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","bindingHandlers","koGrid","gridElem","gridTemplate","initViewportBindingString","initRowBindingString","bowser","onDataChanged","childBindingContext","$css","$grid","$resStrings","eventProvider","plugins","p","onGridInit","initEventHandlers","events","viewportBindingString","bindingString","rowBindingString","groupInfosChanged","sortInfosChanged","kgRow","$parent","source","rowElem","kgFixedRow","kgFixedHeaderRow","headerRow","kgCell","cell","update","kgCellClass","$index","className","kgHeaderRow","kgHeaderCell","headerCell","mouseEvents","eFuncs","mouseDown"],"mappings":"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"}